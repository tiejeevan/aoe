{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-palette.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that suggests complementary color palettes based on a shade of white.\n *\n * - suggestPalette - A function that suggests a color palette based on a white shade.\n * - SuggestPaletteInput - The input type for the suggestPalette function.\n * - SuggestPaletteOutput - The return type for the suggestPalette function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestPaletteInputSchema = z.object({\n  whiteShade: z\n    .string()\n    .describe('The hexadecimal color code of the white shade.'),\n});\nexport type SuggestPaletteInput = z.infer<typeof SuggestPaletteInputSchema>;\n\nconst SuggestPaletteOutputSchema = z.object({\n  palette: z.array(z.string()).describe('An array of complementary color palettes in hexadecimal color codes.'),\n});\nexport type SuggestPaletteOutput = z.infer<typeof SuggestPaletteOutputSchema>;\n\nexport async function suggestPalette(input: SuggestPaletteInput): Promise<SuggestPaletteOutput> {\n  return suggestPaletteFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestPalettePrompt',\n  input: {schema: SuggestPaletteInputSchema},\n  output: {schema: SuggestPaletteOutputSchema},\n  prompt: `You are a color palette expert. Given a shade of white, suggest a complementary color palette consisting of 5 hexadecimal color codes.\n\nShade of white: {{{whiteShade}}}\n\nComplementary color palette:`,\n});\n\nconst suggestPaletteFlow = ai.defineFlow(\n  {\n    name: 'suggestPaletteFlow',\n    inputSchema: SuggestPaletteInputSchema,\n    outputSchema: SuggestPaletteOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,YAAY,uIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACxC;AAGO,eAAe,eAAe,KAA0B;IAC7D,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyB;IACzC,QAAQ;QAAC,QAAQ;IAA0B;IAC3C,QAAQ,CAAC;;;;4BAIiB,CAAC;AAC7B;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { suggestPalette, type SuggestPaletteInput } from '@/ai/flows/suggest-palette';\n\nexport async function suggestPaletteAction(input: SuggestPaletteInput) {\n  try {\n    const result = await suggestPalette(input);\n    return { data: result, error: null };\n  } catch (error) {\n    console.error(error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { data: null, error: `Failed to suggest a palette. ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEO,eAAe,qBAAqB,KAA0B;IACnE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;QACpC,OAAO;YAAE,MAAM;YAAQ,OAAO;QAAK;IACrC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YAAE,MAAM;YAAM,OAAO,CAAC,6BAA6B,EAAE,cAAc;QAAC;IAC7E;AACF;;;IATsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {suggestPaletteAction as '408ea7a1062ec660c99e4eba444d2f56a6107c0b41'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}