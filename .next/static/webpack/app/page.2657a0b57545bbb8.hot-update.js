"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzP2Q0M2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/AdminLogin.tsx":
/*!***********************************!*\
  !*** ./components/AdminLogin.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst AdminLogin = (param)=>{\n    let { onLoginSuccess, onClose } = param;\n    _s();\n    const [username, setUsername] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [password, setPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handleLogin = ()=>{\n        if (username === \"admin\" && password === \"admin\") {\n            setError(\"\");\n            onLoginSuccess();\n        } else {\n            setError(\"Invalid username or password.\");\n        }\n    };\n    const handleKeyDown = (e)=>{\n        if (e.key === \"Enter\") {\n            handleLogin();\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 z-50 flex items-center justify-center bg-black/80\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-stone-dark p-8 rounded-lg shadow-2xl border-2 border-stone-light w-full max-w-sm mx-auto text-center\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-2xl font-serif text-brand-gold mb-4\",\n                    children: \"Admin Login\"\n                }, void 0, false, {\n                    fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 17\n                }, undefined),\n                error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-brand-red mb-4\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 27\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            value: username,\n                            onChange: (e)=>setUsername(e.target.value),\n                            onKeyDown: handleKeyDown,\n                            placeholder: \"Username\",\n                            className: \"bg-parchment-dark text-stone-dark placeholder-stone-light w-full mx-auto text-center font-sans text-xl p-3 rounded-lg border-2 border-stone-light focus:border-brand-gold focus:outline-none\"\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                            lineNumber: 34,\n                            columnNumber: 21\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"password\",\n                            value: password,\n                            onChange: (e)=>setPassword(e.target.value),\n                            onKeyDown: handleKeyDown,\n                            placeholder: \"Password\",\n                            className: \"bg-parchment-dark text-stone-dark placeholder-stone-light w-full mx-auto text-center font-sans text-xl p-3 rounded-lg border-2 border-stone-light focus:border-brand-gold focus:outline-none\"\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 21\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                    lineNumber: 33,\n                    columnNumber: 17\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex gap-4 justify-center mt-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"bg-stone-light hover:bg-stone-dark text-white font-bold py-2 px-6 rounded-lg text-lg font-serif tracking-wide transition-colors\",\n                            children: \"Cancel\"\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                            lineNumber: 52,\n                            columnNumber: 21\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleLogin,\n                            className: \"bg-brand-red hover:bg-red-700 text-white font-bold py-2 px-6 rounded-lg text-lg font-serif tracking-wide transition-colors\",\n                            children: \"Login\"\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                            lineNumber: 58,\n                            columnNumber: 21\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n                    lineNumber: 51,\n                    columnNumber: 18\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n            lineNumber: 30,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/user/studio/components/AdminLogin.tsx\",\n        lineNumber: 29,\n        columnNumber: 9\n    }, undefined);\n};\n_s(AdminLogin, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = AdminLogin;\n/* harmony default export */ __webpack_exports__[\"default\"] = (AdminLogin);\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvQWRtaW5Mb2dpbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDO0FBT3hDLE1BQU1FLGFBQXdDO1FBQUMsRUFBRUMsY0FBYyxFQUFFQyxPQUFPLEVBQUU7O0lBQ3RFLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHTCwrQ0FBUUEsQ0FBQztJQUN6QyxNQUFNLENBQUNNLFVBQVVDLFlBQVksR0FBR1AsK0NBQVFBLENBQUM7SUFDekMsTUFBTSxDQUFDUSxPQUFPQyxTQUFTLEdBQUdULCtDQUFRQSxDQUFDO0lBRW5DLE1BQU1VLGNBQWM7UUFDaEIsSUFBSU4sYUFBYSxXQUFXRSxhQUFhLFNBQVM7WUFDOUNHLFNBQVM7WUFDVFA7UUFDSixPQUFPO1lBQ0hPLFNBQVM7UUFDYjtJQUNKO0lBRUEsTUFBTUUsZ0JBQWdCLENBQUNDO1FBQ25CLElBQUlBLEVBQUVDLEdBQUcsS0FBSyxTQUFTO1lBQ25CSDtRQUNKO0lBQ0o7SUFFQSxxQkFDSSw4REFBQ0k7UUFBSUMsV0FBVTtrQkFDWCw0RUFBQ0Q7WUFBSUMsV0FBVTs7OEJBQ1gsOERBQUNDO29CQUFHRCxXQUFVOzhCQUEyQzs7Ozs7O2dCQUN4RFAsdUJBQVMsOERBQUNTO29CQUFFRixXQUFVOzhCQUF1QlA7Ozs7Ozs4QkFDOUMsOERBQUNNO29CQUFJQyxXQUFVOztzQ0FDWCw4REFBQ0c7NEJBQ0dDLE1BQUs7NEJBQ0xDLE9BQU9oQjs0QkFDUGlCLFVBQVUsQ0FBQ1QsSUFBTVAsWUFBWU8sRUFBRVUsTUFBTSxDQUFDRixLQUFLOzRCQUMzQ0csV0FBV1o7NEJBQ1hhLGFBQVk7NEJBQ1pULFdBQVU7Ozs7OztzQ0FFZCw4REFBQ0c7NEJBQ0dDLE1BQUs7NEJBQ0xDLE9BQU9kOzRCQUNQZSxVQUFVLENBQUNULElBQU1MLFlBQVlLLEVBQUVVLE1BQU0sQ0FBQ0YsS0FBSzs0QkFDM0NHLFdBQVdaOzRCQUNYYSxhQUFZOzRCQUNaVCxXQUFVOzs7Ozs7Ozs7Ozs7OEJBR2pCLDhEQUFDRDtvQkFBSUMsV0FBVTs7c0NBQ1osOERBQUNVOzRCQUNHQyxTQUFTdkI7NEJBQ1RZLFdBQVU7c0NBQ2I7Ozs7OztzQ0FHRCw4REFBQ1U7NEJBQ0dDLFNBQVNoQjs0QkFDVEssV0FBVTtzQ0FDYjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPckI7R0E1RE1kO0tBQUFBO0FBOEROLCtEQUFlQSxVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvQWRtaW5Mb2dpbi50c3g/MTQzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBBZG1pbkxvZ2luUHJvcHMge1xuICAgIG9uTG9naW5TdWNjZXNzOiAoKSA9PiB2b2lkO1xuICAgIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEFkbWluTG9naW46IFJlYWN0LkZDPEFkbWluTG9naW5Qcm9wcz4gPSAoeyBvbkxvZ2luU3VjY2Vzcywgb25DbG9zZSB9KSA9PiB7XG4gICAgY29uc3QgW3VzZXJuYW1lLCBzZXRVc2VybmFtZV0gPSB1c2VTdGF0ZSgnJyk7XG4gICAgY29uc3QgW3Bhc3N3b3JkLCBzZXRQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJyk7XG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgICBjb25zdCBoYW5kbGVMb2dpbiA9ICgpID0+IHtcbiAgICAgICAgaWYgKHVzZXJuYW1lID09PSAnYWRtaW4nICYmIHBhc3N3b3JkID09PSAnYWRtaW4nKSB7XG4gICAgICAgICAgICBzZXRFcnJvcignJyk7XG4gICAgICAgICAgICBvbkxvZ2luU3VjY2VzcygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0RXJyb3IoJ0ludmFsaWQgdXNlcm5hbWUgb3IgcGFzc3dvcmQuJyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZTogUmVhY3QuS2V5Ym9hcmRFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgICAgIGhhbmRsZUxvZ2luKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBpbnNldC0wIHotNTAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYmctYmxhY2svODBcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctc3RvbmUtZGFyayBwLTggcm91bmRlZC1sZyBzaGFkb3ctMnhsIGJvcmRlci0yIGJvcmRlci1zdG9uZS1saWdodCB3LWZ1bGwgbWF4LXctc20gbXgtYXV0byB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LXNlcmlmIHRleHQtYnJhbmQtZ29sZCBtYi00XCI+QWRtaW4gTG9naW48L2gyPlxuICAgICAgICAgICAgICAgIHtlcnJvciAmJiA8cCBjbGFzc05hbWU9XCJ0ZXh0LWJyYW5kLXJlZCBtYi00XCI+e2Vycm9yfTwvcD59XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dXNlcm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFVzZXJuYW1lKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiVXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctcGFyY2htZW50LWRhcmsgdGV4dC1zdG9uZS1kYXJrIHBsYWNlaG9sZGVyLXN0b25lLWxpZ2h0IHctZnVsbCBteC1hdXRvIHRleHQtY2VudGVyIGZvbnQtc2FucyB0ZXh0LXhsIHAtMyByb3VuZGVkLWxnIGJvcmRlci0yIGJvcmRlci1zdG9uZS1saWdodCBmb2N1czpib3JkZXItYnJhbmQtZ29sZCBmb2N1czpvdXRsaW5lLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFBhc3N3b3JkKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctcGFyY2htZW50LWRhcmsgdGV4dC1zdG9uZS1kYXJrIHBsYWNlaG9sZGVyLXN0b25lLWxpZ2h0IHctZnVsbCBteC1hdXRvIHRleHQtY2VudGVyIGZvbnQtc2FucyB0ZXh0LXhsIHAtMyByb3VuZGVkLWxnIGJvcmRlci0yIGJvcmRlci1zdG9uZS1saWdodCBmb2N1czpib3JkZXItYnJhbmQtZ29sZCBmb2N1czpvdXRsaW5lLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTQganVzdGlmeS1jZW50ZXIgbXQtNlwiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsb3NlfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctc3RvbmUtbGlnaHQgaG92ZXI6Ymctc3RvbmUtZGFyayB0ZXh0LXdoaXRlIGZvbnQtYm9sZCBweS0yIHB4LTYgcm91bmRlZC1sZyB0ZXh0LWxnIGZvbnQtc2VyaWYgdHJhY2tpbmctd2lkZSB0cmFuc2l0aW9uLWNvbG9yc1wiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlTG9naW59XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1icmFuZC1yZWQgaG92ZXI6YmctcmVkLTcwMCB0ZXh0LXdoaXRlIGZvbnQtYm9sZCBweS0yIHB4LTYgcm91bmRlZC1sZyB0ZXh0LWxnIGZvbnQtc2VyaWYgdHJhY2tpbmctd2lkZSB0cmFuc2l0aW9uLWNvbG9yc1wiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2luXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBZG1pbkxvZ2luO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJBZG1pbkxvZ2luIiwib25Mb2dpblN1Y2Nlc3MiLCJvbkNsb3NlIiwidXNlcm5hbWUiLCJzZXRVc2VybmFtZSIsInBhc3N3b3JkIiwic2V0UGFzc3dvcmQiLCJlcnJvciIsInNldEVycm9yIiwiaGFuZGxlTG9naW4iLCJoYW5kbGVLZXlEb3duIiwiZSIsImtleSIsImRpdiIsImNsYXNzTmFtZSIsImgyIiwicCIsImlucHV0IiwidHlwZSIsInZhbHVlIiwib25DaGFuZ2UiLCJ0YXJnZXQiLCJvbktleURvd24iLCJwbGFjZWhvbGRlciIsImJ1dHRvbiIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/AdminLogin.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/StartScreen.tsx":
/*!************************************!*\
  !*** ./components/StartScreen.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Trash2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/trash-2.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _AdminLogin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AdminLogin */ \"(app-pages-browser)/./components/AdminLogin.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst StartScreen = (param)=>{\n    let { onNewGame, onResumeGame, savedGames, onDeleteGame } = param;\n    _s();\n    const [isNaming, setIsNaming] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [newName, setNewName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showAdminLogin, setShowAdminLogin] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isNaming) {\n            var _inputRef_current;\n            (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n        }\n    }, [\n        isNaming\n    ]);\n    const handleStart = ()=>{\n        if (newName.trim().length >= 4) {\n            onNewGame(newName.trim());\n        }\n    };\n    const handleKeyDown = (e)=>{\n        if (e.key === \"Enter\") {\n            handleStart();\n        }\n    };\n    const handleLoginSuccess = ()=>{\n        router.push(\"/admin\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"text-center bg-stone-dark p-8 rounded-lg shadow-2xl border-2 border-stone-light w-full max-w-2xl mx-auto\",\n        children: [\n            showAdminLogin && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AdminLogin__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                onLoginSuccess: handleLoginSuccess,\n                onClose: ()=>setShowAdminLogin(false)\n            }, void 0, false, {\n                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                lineNumber: 44,\n                columnNumber: 32\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-6xl font-serif text-parchment-light mb-2 tracking-wider\",\n                children: \"Gemini Empires\"\n            }, void 0, false, {\n                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                lineNumber: 46,\n                columnNumber: 13\n            }, undefined),\n            isNaming ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-2xl font-serif text-brand-gold mb-4\",\n                        children: \"Name Your Saga\"\n                    }, void 0, false, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        ref: inputRef,\n                        type: \"text\",\n                        value: newName,\n                        onChange: (e)=>setNewName(e.target.value.toUpperCase()),\n                        onKeyDown: handleKeyDown,\n                        placeholder: \"At least 4 characters...\",\n                        className: \"bg-parchment-dark text-stone-dark placeholder-stone-light w-full max-w-sm mx-auto text-center font-sans text-xl p-3 rounded-lg border-2 border-stone-light focus:border-brand-gold focus:outline-none uppercase\",\n                        maxLength: 20\n                    }, void 0, false, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-4 justify-center mt-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setIsNaming(false),\n                                className: \"bg-stone-light hover:bg-stone-dark text-white font-bold py-3 px-8 rounded-lg text-xl font-serif tracking-wide transition-transform duration-200 ease-in-out hover:scale-105 shadow-lg\",\n                                children: \"Back\"\n                            }, void 0, false, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 26\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleStart,\n                                disabled: newName.trim().length < 4,\n                                className: \"bg-brand-red hover:bg-red-700 disabled:bg-stone-dark disabled:text-stone-light/50 disabled:cursor-not-allowed text-white font-bold py-3 px-8 rounded-lg text-xl font-serif tracking-wide transition-transform duration-200 ease-in-out hover:scale-105 shadow-lg\",\n                                children: \"Begin\"\n                            }, void 0, false, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 25\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 21\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                lineNumber: 49,\n                columnNumber: 17\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg text-parchment-dark mb-8 font-sans\",\n                        children: \"Your Civilization's Saga, Written by AI\"\n                    }, void 0, false, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-col gap-4 items-center\",\n                        children: [\n                            savedGames.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full max-w-sm\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-xl font-serif text-brand-gold mb-2\",\n                                        children: \"Resume a Saga\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                        lineNumber: 83,\n                                        columnNumber: 33\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-col gap-3 max-h-48 overflow-y-auto bg-black/20 p-2 rounded-md\",\n                                        children: savedGames.map((name)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-center gap-2\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                        onClick: ()=>onResumeGame(name),\n                                                        className: \"flex-grow bg-brand-green/80 hover:bg-brand-green text-white font-bold py-2 px-4 rounded-md text-lg font-sans transition-colors duration-200 text-left\",\n                                                        children: name\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                                        lineNumber: 87,\n                                                        columnNumber: 45\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                        onClick: (e)=>{\n                                                            e.stopPropagation();\n                                                            onDeleteGame(name);\n                                                        },\n                                                        className: \"p-2 bg-stone-light/50 hover:bg-brand-red text-parchment-light rounded-md transition-colors\",\n                                                        \"aria-label\": \"Delete \".concat(name),\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-5 h-5\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                                            lineNumber: 101,\n                                                            columnNumber: 49\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                                        lineNumber: 93,\n                                                        columnNumber: 45\n                                                    }, undefined)\n                                                ]\n                                            }, name, true, {\n                                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                                lineNumber: 86,\n                                                columnNumber: 41\n                                            }, undefined))\n                                    }, void 0, false, {\n                                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                        lineNumber: 84,\n                                        columnNumber: 33\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 82,\n                                columnNumber: 29\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setIsNaming(true),\n                                className: \"bg-brand-red hover:bg-red-700 text-white font-bold py-4 px-8 rounded-lg text-2xl font-serif tracking-wide transition-transform duration-200 ease-in-out hover:scale-105 shadow-lg mt-4\",\n                                children: \"New Saga\"\n                            }, void 0, false, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 108,\n                                columnNumber: 25\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 80,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-8 text-sm text-stone-light font-sans\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"mb-2\",\n                                children: savedGames.length > 0 ? \"Start a new saga or resume an existing one.\" : \"Lead your people from a nomadic tribe to a thriving empire. Every game is a unique story.\"\n                            }, void 0, false, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 116,\n                                columnNumber: 25\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setShowAdminLogin(true),\n                                className: \"text-xs text-brand-blue hover:underline\",\n                                children: \"admin?\"\n                            }, void 0, false, {\n                                fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                                lineNumber: 122,\n                                columnNumber: 26\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n                        lineNumber: 115,\n                        columnNumber: 22\n                    }, undefined)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/user/studio/components/StartScreen.tsx\",\n        lineNumber: 43,\n        columnNumber: 9\n    }, undefined);\n};\n_s(StartScreen, \"hUtrfUvrzeXd+6VRicdLBHYUgT4=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = StartScreen;\n/* harmony default export */ __webpack_exports__[\"default\"] = (StartScreen);\nvar _c;\n$RefreshReg$(_c, \"StartScreen\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/StartScreen.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./data/predefinedContent.ts":
/*!***********************************!*\
  !*** ./data/predefinedContent.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PREDEFINED_AGES: function() { return /* binding */ PREDEFINED_AGES; },\n/* harmony export */   PREDEFINED_AGES_MAP: function() { return /* binding */ PREDEFINED_AGES_MAP; },\n/* harmony export */   PREDEFINED_BANNER_URLS: function() { return /* binding */ PREDEFINED_BANNER_URLS; },\n/* harmony export */   PREDEFINED_CIVILIZATIONS: function() { return /* binding */ PREDEFINED_CIVILIZATIONS; },\n/* harmony export */   PREDEFINED_EVENTS: function() { return /* binding */ PREDEFINED_EVENTS; }\n/* harmony export */ });\n// In a real project, these images would be located in an `/assets` folder.\n// Using a placeholder service with specific seeds to simulate having unique, static images for each civilization.\nconst PREDEFINED_CIVILIZATIONS = [\n    {\n        name: \"The Sunstone Clan\",\n        lore: \"Masters of stonework, their cities are carved directly into mountainsides.\",\n        bonus: \"Stone gathering is 20% faster.\",\n        uniqueUnit: {\n            name: \"Granite Guard\",\n            description: \"Heavily armored infantry that excels at defense.\"\n        }\n    },\n    {\n        name: \"The River Nomads\",\n        lore: \"A fluid society that follows the great rivers, their culture as rich as the fertile plains.\",\n        bonus: \"Farms produce food 15% faster.\",\n        uniqueUnit: {\n            name: \"River-Watch Rider\",\n            description: \"Fast cavalry adept at scouting and harassing enemy lines.\"\n        }\n    },\n    {\n        name: \"The Ironwood Sentinels\",\n        lore: \"Living in deep forests, they have mastered the art of woodwork and archery.\",\n        bonus: \"Woodcutting is 25% faster.\",\n        uniqueUnit: {\n            name: \"Ironwood Archer\",\n            description: \"A long-ranged archer with superior damage against other archers.\"\n        }\n    },\n    {\n        name: \"The Gilded Syndicate\",\n        lore: \"A civilization built on trade and wealth, their markets are the envy of the world.\",\n        bonus: \"Gold mining generates 10% more resources.\",\n        uniqueUnit: {\n            name: \"Gilded Companion\",\n            description: \"A mercenary unit that costs only gold and is quick to train.\"\n        }\n    }\n];\n// Banner URLs corresponding to the civilizations above.\nconst PREDEFINED_BANNER_URLS = [\n    \"https://picsum.photos/seed/sunstone/512/512\",\n    \"https://picsum.photos/seed/riverfolk/512/512\",\n    \"https://picsum.photos/seed/ironwood/512/512\",\n    \"https://picsum.photos/seed/gilded/512/512\"\n];\nconst PREDEFINED_EVENTS = [\n    {\n        message: \"A traveling merchant has arrived, offering a bulk discount on wood.\",\n        choices: [\n            {\n                text: \"Buy 100 Wood\",\n                cost: {\n                    gold: 40\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"The deal is made. The wood is added to your stockpile.\"\n                }\n            },\n            {\n                text: \"Politely decline\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You send the merchant on their way.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your scouts have found an ancient, treasure-filled ruin. It seems risky to explore.\",\n        choices: [\n            {\n                text: \"Send an expedition (70% success)\",\n                cost: {\n                    food: 50\n                },\n                successChance: 0.7,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                150,\n                                250\n                            ]\n                        }\n                    ],\n                    log: \"Success! Your explorers return with a hoard of ancient gold.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The expedition fails, and some supplies are lost, but everyone returns safely.\"\n                }\n            },\n            {\n                text: \"Leave it be\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide the potential treasure is not worth the risk.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A grateful farmer, whose family you protected, offers you a gift.\",\n        choices: [\n            {\n                text: \"Accept their Hearty Meal\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"hearty_meal\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"You accept the meal. The food is a great boon to your people.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A fire breaks out in one of your storage huts!\",\n        choices: [\n            {\n                text: \"Organize a bucket brigade (80% success)\",\n                successChance: 0.8,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: -25\n                        }\n                    ],\n                    log: \"The fire is quickly put out, with only minor losses.\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: [\n                                -100,\n                                -150\n                            ]\n                        }\n                    ],\n                    log: \"The fire rages out of control before being contained, destroying a large amount of wood.\"\n                }\n            },\n            {\n                text: \"Prioritize saving villagers\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: [\n                                -80,\n                                -120\n                            ]\n                        }\n                    ],\n                    log: \"Everyone is safe, but the storage hut and its contents are mostly lost.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A neighboring clan sends an envoy with a gift to foster good relations.\",\n        choices: [\n            {\n                text: \"Accept the gift of stone\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 75\n                        }\n                    ],\n                    log: \"You accept the gift, strengthening ties with your neighbors.\"\n                }\n            },\n            {\n                text: \"Accept the gift of food\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"You accept the gift, a welcome addition to your stores.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A wandering mystic reads the stars and offers you a cryptic blessing.\",\n        choices: [\n            {\n                text: \"Heed their words\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"builders_charm\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The mystic nods and hands you a strange-looking compass. 'May it guide your hand,' they say.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A shady merchant offers a 'too good to be true' deal on rare stone.\",\n        choices: [\n            {\n                text: \"Buy 200 stone for 50 gold (50% scam)\",\n                cost: {\n                    gold: 50\n                },\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 200\n                        }\n                    ],\n                    log: \"The stone is genuine! An incredible deal.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"Scam! The merchant and your gold are gone, leaving you with a pile of painted rocks.\"\n                }\n            },\n            {\n                text: \"Arrest the merchant\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 25\n                        }\n                    ],\n                    log: \"You arrest the shifty merchant and confiscate their ill-gotten gains.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A strange sickness is spreading. Your healers are requesting funds for medicine.\",\n        choices: [\n            {\n                text: \"Fund the research (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.75,\n                successEffects: {\n                    rewards: [],\n                    log: \"The medicine works! The plague is halted before it can cause serious harm.\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: -150\n                        }\n                    ],\n                    log: \"The medicine fails. The sickness takes a toll on your food supply.\"\n                }\n            },\n            {\n                text: \"Quarantine the affected (Cost: 100 food)\",\n                cost: {\n                    food: 100\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The quarantine is effective. The sickness dies out, but at the cost of valuable food.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your scouts have found an ancient, weathered map.\",\n        choices: [\n            {\n                text: \"Fund a small expedition (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"geologists_map\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The expedition was a success! They return with a detailed Geologist's Map.\"\n                }\n            },\n            {\n                text: \"It's probably nothing\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You dismiss the map as a worthless old parchment.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"The harvest has been unusually bountiful this season!\",\n        choices: [\n            {\n                text: \"Store the excess food (Gain 200 Food)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 200\n                        }\n                    ],\n                    log: \"Your granaries are overflowing.\"\n                }\n            },\n            {\n                text: \"Use the surplus for a feast (Gain 'Golden Harvest')\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"golden_harvest\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"A grand feast is held! The morale of your people soars.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Miners report an old gold mine is becoming unstable.\",\n        choices: [\n            {\n                text: \"Risk one last delve (60% success)\",\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                200,\n                                300\n                            ]\n                        }\n                    ],\n                    log: \"A massive gold vein is extracted just before a minor collapse!\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: -75\n                        }\n                    ],\n                    log: \"A major collapse! The mine is lost, and it will cost stone to clear the rubble.\"\n                }\n            },\n            {\n                text: \"Abandon it safely\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"You safely extract a small amount of gold before sealing the mine forever.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A wandering bard offers to compose an epic for your civilization.\",\n        choices: [\n            {\n                text: \"Pay the bard (Cost: 40 gold)\",\n                cost: {\n                    gold: 40\n                },\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The bard's song is a masterpiece, inspiring your warriors to new heights!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The bard sings a pleasant, but ultimately forgettable, tune.\"\n                }\n            },\n            {\n                text: \"Decline the offer\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You have no time for songs and stories.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A master architect, renowned for their genius, is passing through your lands.\",\n        choices: [\n            {\n                text: \"Hire for a consultation (Cost: 150 gold)\",\n                cost: {\n                    gold: 150\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"blueprint_of_the_master\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The architect studies your plans and provides an ingenious blueprint.\"\n                }\n            },\n            {\n                text: \"Let them pass\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You let the opportunity pass, confident in your own builders.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A celestial alignment occurs. Your mystics claim it is a time of great power.\",\n        choices: [\n            {\n                text: \"Make a grand offering (Cost: 250 food, 250 gold)\",\n                cost: {\n                    food: 250,\n                    gold: 250\n                },\n                successChance: 0.05,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"whisper_of_the_creator\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The heavens accept your offering! A divine whisper echoes through your land.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The stars remain silent. The offering is consumed.\"\n                }\n            },\n            {\n                text: \"Observe the alignment\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You watch the beautiful celestial display.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Aggressive wildlife is menacing your villagers near the forests.\",\n        choices: [\n            {\n                text: \"Hire hunters to thin the pack (Cost: 75 food)\",\n                cost: {\n                    food: 75\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The hunters deal with the threat effectively. The forests are safe again.\"\n                }\n            },\n            {\n                text: \"Let the villagers handle it\",\n                successChance: 0.7,\n                successEffects: {\n                    rewards: [],\n                    log: \"Your brave villagers manage to drive the beasts away without incident.\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: -50\n                        }\n                    ],\n                    log: \"The villagers are forced to retreat, losing some of their gathered food in the chaos.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A noble from a distant land, fleeing their enemies, begs for sanctuary.\",\n        choices: [\n            {\n                text: \"Grant sanctuary (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"drillmasters_whistle\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Grateful, the noble gifts you a Drillmaster's Whistle before disappearing.\"\n                }\n            },\n            {\n                text: \"Turn them away\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You refuse to get involved in foreign conflicts.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Favorable winds and clear skies present a perfect opportunity for trade.\",\n        choices: [\n            {\n                text: \"Fund a large expedition (Cost: 100 gold, 50 wood)\",\n                cost: {\n                    gold: 100,\n                    wood: 50\n                },\n                successChance: 0.8,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                250,\n                                400\n                            ]\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: [\n                                100,\n                                200\n                            ]\n                        }\n                    ],\n                    log: \"The trade expedition returns with massive profits!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"A sudden storm! The expedition returns with nothing to show for the effort.\"\n                }\n            },\n            {\n                text: \"Too risky\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide to keep your resources at home.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your scholars claim they are on the verge of a breakthrough.\",\n        choices: [\n            {\n                text: \"Fund their research (Cost: 125 gold)\",\n                cost: {\n                    gold: 125\n                },\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"tome_of_insight\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"They did it! Their findings are recorded in a Tome of Insight.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The research leads to a dead end, and your gold is spent.\"\n                }\n            },\n            {\n                text: \"They are always 'on the verge'\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You tell the scholars to focus on more practical matters.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"The woods have gone unnervingly quiet. Something feels different.\",\n        choices: [\n            {\n                text: \"Send scouts to investigate (Cost: 30 food)\",\n                cost: {\n                    food: 30\n                },\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"foresters_axe\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The scouts find a grove tended by a hermit, who gifts them a masterfully crafted axe.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The scouts are spooked by strange noises and return empty-handed, having wasted some rations.\"\n                }\n            },\n            {\n                text: \"It is not our concern\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide that a quiet forest is a good thing.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A shaman sees a vision in the campfire's flames and offers guidance.\",\n        choices: [\n            {\n                text: \"Heed their words (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"You follow the shaman's strange ritual and are rewarded with a Pact of Plenty.\"\n                }\n            },\n            {\n                text: \"Dismiss it as madness\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You ignore the shaman's ramblings.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A tremor has partially collapsed a nearby cave, revealing glittering walls.\",\n        choices: [\n            {\n                text: \"It's a sign! (Gain 'Heart of the Mountain')\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"heart_of_the_mountain\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The cave contains a massive, pulsing geode! You have found the Heart of the Mountain.\"\n                }\n            },\n            {\n                text: \"It's too dangerous.\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You steer clear of the unstable cave.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An old legend leads your explorers to a hidden tomb.\",\n        choices: [\n            {\n                text: \"Enter the tomb (Cost: 100 food, 100 wood)\",\n                cost: {\n                    food: 100,\n                    wood: 100\n                },\n                successChance: 0.25,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"horn_of_urgency\",\n                            amount: 1\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 500\n                        }\n                    ],\n                    log: \"Incredible! You've found the Horn of Urgency and the lost king's treasure.\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: -100\n                        }\n                    ],\n                    log: \"The tomb is trapped! Your explorers escape, but you lose gold paying for their injuries.\"\n                }\n            },\n            {\n                text: \"Some legends should remain legends\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You seal the tomb, leaving its secrets buried.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A strange resonance is felt from the earth, calming the land.\",\n        choices: [\n            {\n                text: \"Meditate on the feeling\",\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"essence_of_the_earth\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Your connection with the land deepens, revealing its hidden Essence.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The feeling fades, leaving you with a sense of peace, but nothing more.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A sudden downpour has created a flash flood!\",\n        choices: [\n            {\n                text: \"Save the farmlands!\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: [\n                                -50,\n                                -80\n                            ]\n                        }\n                    ],\n                    log: \"You save the farms from being washed away, but lose a significant amount of wood to the floodwaters.\"\n                }\n            },\n            {\n                text: \"Protect the mines!\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: [\n                                -70,\n                                -100\n                            ]\n                        }\n                    ],\n                    log: \"The mines are secured, but the flood ruins a portion of your food stores.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A charismatic leader emerges among your people, advocating for rapid expansion.\",\n        choices: [\n            {\n                text: \"Embrace their vision (Gain a villager)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"unit\",\n                            unitType: \"villager\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Inspired by their words, a new family joins your settlement to seek their fortune.\"\n                }\n            },\n            {\n                text: \"Urge caution (Gain 100 stone)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"You temper their ambition with pragmatism, reinforcing your foundations instead.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A mysterious shipwreck has washed ashore.\",\n        choices: [\n            {\n                text: \"Salvage the wreckage (Cost: 40 food)\",\n                cost: {\n                    food: 40\n                },\n                successChance: 0.8,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: [\n                                100,\n                                150\n                            ]\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                20,\n                                50\n                            ]\n                        }\n                    ],\n                    log: \"The wreckage yields valuable wood and a small chest of coins.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The wreckage is too damaged and rotten to be of any use.\"\n                }\n            },\n            {\n                text: \"Burn it for a signal fire\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You burn the ship, hoping to signal other survivors. None appear.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A local tinkerer has a strange contraption they claim can 'find' resources.\",\n        choices: [\n            {\n                text: \"Fund their work (Cost: 80 gold)\",\n                cost: {\n                    gold: 80\n                },\n                successChance: 0.4,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"geologists_map\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"It works! The device points to a new mineral deposit. The tinkerer gives you the map.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The contraption sputters, sparks, and falls apart. Your gold is wasted.\"\n                }\n            },\n            {\n                text: \"Dismiss them as a charlatan\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You have no time for such nonsense and send the tinkerer away.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A mild, unseasonable winter threatens your food supply.\",\n        choices: [\n            {\n                text: \"Share food from your stores\",\n                cost: {\n                    food: 150\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"Your people survive the lean period thanks to your foresight, but the stores are lower.\"\n                }\n            },\n            {\n                text: \"Organize hunting parties (70% success)\",\n                successChance: 0.7,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"The hunts are successful, supplementing your food stores.\"\n                },\n                failureEffects: {\n                    cost: {\n                        food: 100\n                    },\n                    rewards: [],\n                    log: \"The hunts fail, and the hunters consumed valuable rations for nothing.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A skilled lumberjack offers to teach your woodcutters advanced techniques.\",\n        choices: [\n            {\n                text: \"Pay for the training (Cost: 100 wood)\",\n                cost: {\n                    wood: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"foresters_axe\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The training is a success! Your lumberjacks are more efficient.\"\n                }\n            },\n            {\n                text: \"Our techniques are fine\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decline the offer, confident in your own methods.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A wild beast has been cornered by your scouts. It looks magnificent and rare.\",\n        choices: [\n            {\n                text: \"Capture it for study (Cost: 80 food)\",\n                cost: {\n                    food: 80\n                },\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"essence_of_the_earth\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The beast is a creature of the earth itself! Its presence revitalizes the land.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The beast escapes, leaving your scouts tired and hungry.\"\n                }\n            },\n            {\n                text: \"Hunt it for food\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 120\n                        }\n                    ],\n                    log: \"The beast provides a substantial amount of food for your people.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A dispute over land has broken out between two families.\",\n        choices: [\n            {\n                text: \"Rule in favor of the older claim (Gain 50 stone)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"You rule with tradition. The grateful family offers you a gift of stone.\"\n                }\n            },\n            {\n                text: \"Split the land evenly (Gain 50 food)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"Your fair ruling pleases both families, and they offer a gift of food.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A comet is sighted in the sky. Some see it as a good omen, others as a harbinger of doom.\",\n        choices: [\n            {\n                text: \"It is a blessing! (Gain 'Scroll of Haste')\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"scroll_of_haste\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Inspired by the omen, your builders work with newfound speed.\"\n                }\n            },\n            {\n                text: \"It is a warning! (Gain 50 wood)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"Heeding the warning, your people reinforce their homes, stockpiling wood.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A child has discovered a cave system filled with unusual, glowing mushrooms.\",\n        choices: [\n            {\n                text: \"Harvest them for food (50% chance of illness)\",\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 250\n                        }\n                    ],\n                    log: \"The mushrooms are a delicacy! A feast is had.\"\n                },\n                failureEffects: {\n                    cost: {\n                        food: 100\n                    },\n                    rewards: [],\n                    log: \"The mushrooms cause a mild sickness, costing food to care for the ill.\"\n                }\n            },\n            {\n                text: \"Study the cave (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The mushrooms have potent magical properties your mystics can harness.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A famous mercenary captain and their company are passing through.\",\n        choices: [\n            {\n                text: \"Hire them for training (Cost: 200 gold)\",\n                cost: {\n                    gold: 200\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"drillmasters_whistle\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The mercenaries drill your soldiers, teaching them valuable techniques.\"\n                }\n            },\n            {\n                text: \"Pay them to leave\",\n                cost: {\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You pay the mercenaries to move on, avoiding any potential trouble.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An abandoned library is discovered, its contents remarkably preserved.\",\n        choices: [\n            {\n                text: \"Study the economic texts (Cost: 75 gold)\",\n                cost: {\n                    gold: 75\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"golden_harvest\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"You discover ancient farming techniques that promise a bountiful harvest.\"\n                }\n            },\n            {\n                text: \"Study the military histories (Cost: 75 gold)\",\n                cost: {\n                    gold: 75\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"tome_of_insight\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The histories provide insights that will help you advance your society.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A long-forgotten festival is rediscovered in an old text.\",\n        choices: [\n            {\n                text: \"Revive the festival! (Cost: 100 food, 50 gold)\",\n                cost: {\n                    food: 100,\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"hearty_meal\",\n                            amount: 2\n                        }\n                    ],\n                    log: \"The festival is a massive success, boosting morale and creating surplus food.\"\n                }\n            },\n            {\n                text: \"We have no time for old ways\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide to focus on more practical matters.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A stone quarry has signs of a imminent collapse.\",\n        choices: [\n            {\n                text: \"One last haul (40% success)\",\n                successChance: 0.4,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: [\n                                400,\n                                600\n                            ]\n                        }\n                    ],\n                    log: \"Incredible! Your workers extract a huge lode of stone just in time.\"\n                },\n                failureEffects: {\n                    cost: {\n                        wood: 100\n                    },\n                    rewards: [],\n                    log: \"The quarry collapses early! It costs wood to reinforce the surrounding area.\"\n                }\n            },\n            {\n                text: \"Abandon it immediately\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You prioritize safety and abandon the unstable quarry.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A diplomatic envoy from a powerful, distant empire has arrived.\",\n        choices: [\n            {\n                text: \"Host a grand feast (Cost: 200 food)\",\n                cost: {\n                    food: 200\n                },\n                successChance: 0.2,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Impressed, the envoy gifts you a military banner as a sign of friendship.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The envoy is pleased but offers only their thanks before departing.\"\n                }\n            },\n            {\n                text: \"Offer a simple greeting\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 30\n                        }\n                    ],\n                    log: \"The envoy offers a token gift of gold and continues on their journey.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A master artisan wishes to settle in your civilization.\",\n        choices: [\n            {\n                text: \"Grant them a workshop (Cost: 150 wood)\",\n                cost: {\n                    wood: 150\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"blueprint_of_the_master\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The artisan is grateful and designs an ingenious blueprint for your builders.\"\n                }\n            },\n            {\n                text: \"We can't afford it\",\n                successEffects: {\n                    rewards: [],\n                    log: \"The artisan, disappointed, seeks patronage elsewhere.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An ancient battlefield is discovered, littered with old skeletons and rusted weapons.\",\n        choices: [\n            {\n                text: \"Scavenge for metal (75% success)\",\n                successChance: 0.75,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                50,\n                                100\n                            ]\n                        }\n                    ],\n                    log: \"Your people melt down the old weapons, gaining a surprising amount of gold.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The metal is too rusted and worthless. The effort is wasted.\"\n                }\n            },\n            {\n                text: \"Consecrate the ground\",\n                successChance: 0.05,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"horn_of_urgency\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The spirits of the fallen soldiers, pleased, bestow a powerful blessing upon you.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"You pay respects to the fallen. The land feels more peaceful.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A great philosopher has begun to question the nature of your rule.\",\n        choices: [\n            {\n                text: \"Embrace their wisdom (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.01,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"whisper_of_the_creator\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Through meditation and philosophy, you achieve a state of enlightenment that transcends mortal work.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The philosophical debates are invigorating but yield no tangible reward.\"\n                }\n            },\n            {\n                text: \"Imprison them for treason!\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The philosopher is imprisoned, quelling dissent but costing food to maintain the jail.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Unseasonably strong winds have damaged the roofs of several houses.\",\n        choices: [\n            {\n                text: \"Repair the damage\",\n                cost: {\n                    wood: 80\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The houses are repaired, but it costs a significant amount of wood.\"\n                }\n            },\n            {\n                text: \"They'll have to manage\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You leave the families to fend for themselves, saving resources but fostering resentment.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A child finds a beautifully crafted, ancient horn buried in the mud.\",\n        choices: [\n            {\n                text: \"Clean it and see what happens\",\n                successChance: 0.2,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"horn_of_urgency\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"As you blow the horn, a powerful magic completes all your training projects instantly!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The horn makes a pleasant sound, but nothing magical occurs.\"\n                }\n            },\n            {\n                text: \"It's just an old trinket\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You toss the horn aside.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A veteran soldier, tired of war, offers to train your troops for a price.\",\n        choices: [\n            {\n                text: \"Accept his offer (Cost: 150 gold)\",\n                cost: {\n                    gold: 150\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"His training methods are brutal but effective, inspiring your troops.\"\n                }\n            },\n            {\n                text: \"We have our own trainers\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decline, confident in your own drillmasters.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A meteor shower illuminates the night sky, and a small, warm stone falls nearby.\",\n        choices: [\n            {\n                text: \"Retrieve the star-stone\",\n                cost: {\n                    food: 20\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"shard_of_the_ancients\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The stone contains immense power, instantly finishing your most difficult construction.\"\n                }\n            },\n            {\n                text: \"Too dangerous\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You watch the beautiful celestial event from a safe distance.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A wandering mystic has a vision of a bountiful future.\",\n        choices: [\n            {\n                text: \"Offer them food for their vision (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The mystic is grateful and shares a ritual to ensure their vision comes true.\"\n                }\n            },\n            {\n                text: \"Visions are just dreams\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You dismiss the mystic's words and send them on their way.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A plague of rats is threatening your granaries.\",\n        choices: [\n            {\n                text: \"Use poison (70% success)\",\n                successChance: 0.7,\n                successEffects: {\n                    rewards: [],\n                    log: \"The poison works, and the granaries are safe.\"\n                },\n                failureEffects: {\n                    cost: {\n                        food: 150\n                    },\n                    rewards: [],\n                    log: \"The rats are resistant! A significant portion of your food is spoiled.\"\n                }\n            },\n            {\n                text: \"Introduce cats to the settlement\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The cats prove to be excellent hunters, solving the rat problem permanently.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A cartographer offers to sell you maps of the surrounding lands.\",\n        choices: [\n            {\n                text: \"Buy the maps (Cost: 75 gold)\",\n                cost: {\n                    gold: 75\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"geologists_map\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The maps are incredibly detailed, revealing hidden resource deposits.\"\n                }\n            },\n            {\n                text: \"Our scouts will suffice\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decline the offer, trusting your own explorers.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your loggers have discovered a petrified forest.\",\n        choices: [\n            {\n                text: \"Harvest the strange wood (Gain 100 stone)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 100\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: -50\n                        }\n                    ],\n                    log: \"The 'wood' is hard as rock. You gain stone, but the effort dulls your axes.\"\n                }\n            },\n            {\n                text: \"Preserve it as a natural wonder\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide to leave the beautiful and strange forest untouched.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A local holiday is approaching. The people ask for a celebration.\",\n        choices: [\n            {\n                text: \"Grant a feast (Cost: 150 food)\",\n                cost: {\n                    food: 150\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"hearty_meal\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The feast raises everyone's spirits, and some even donate food back to the stores!\"\n                }\n            },\n            {\n                text: \"There is work to be done\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decree that work is more important than celebration right now.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A heatwave is making construction work difficult and slow.\",\n        choices: [\n            {\n                text: \"Provide extra water (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"scroll_of_haste\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Refreshed, your workers manage a burst of speed despite the heat.\"\n                }\n            },\n            {\n                text: \"They must endure\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You tell the workers to push through the heat. Morale suffers, but resources are saved.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A trader caravan gets stuck in the mud nearby.\",\n        choices: [\n            {\n                text: \"Help them (Cost: 30 wood)\",\n                cost: {\n                    wood: 30\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                80,\n                                120\n                            ]\n                        }\n                    ],\n                    log: \"The grateful traders pay you handsomely for your assistance.\"\n                }\n            },\n            {\n                text: \"Demand payment first (50% success)\",\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                150,\n                                200\n                            ]\n                        }\n                    ],\n                    log: \"The traders reluctantly agree to your high price.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"Offended, the traders manage to free themselves and leave, spreading ill will.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A scholar has deciphered an ancient text that speaks of divine farming methods.\",\n        choices: [\n            {\n                text: \"Try the new methods (Cost: 100 wood)\",\n                cost: {\n                    wood: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"golden_harvest\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The ancient methods work! Your next harvest will be legendary.\"\n                }\n            },\n            {\n                text: \"Stick to what we know\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide the risk is not worth the potential reward.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your blacksmith claims to have forged an unbreakable sword.\",\n        choices: [\n            {\n                text: \"Reward their craftsmanship (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.15,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The sword inspires the creation of a powerful banner for your army.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The sword is excellent, but not magical. Your blacksmith is encouraged by the reward.\"\n                }\n            },\n            {\n                text: \"Prove it\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You test the sword against a shield. It breaks. The blacksmith returns to their forge, humbled.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A strange, silent pilgrim walks through your town, leaving behind a single, perfect seed.\",\n        choices: [\n            {\n                text: \"Plant the seed\",\n                cost: {\n                    food: 10\n                },\n                successChance: 0.05,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"essence_of_the_earth\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"A great tree grows overnight, its roots replenishing all the land around it.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"A simple, beautiful flower grows from the seed.\"\n                }\n            },\n            {\n                text: \"Discard it\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You throw the strange seed away, unwilling to take the risk.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A group of skilled masons are seeking work.\",\n        choices: [\n            {\n                text: \"Hire them for a project (Cost: 120 gold)\",\n                cost: {\n                    gold: 120\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"blueprint_of_the_master\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Their work is so efficient they leave you with a master blueprint.\"\n                }\n            },\n            {\n                text: \"We have enough workers\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You turn the masons away.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An earthquake has revealed a chasm that glitters with gold.\",\n        choices: [\n            {\n                text: \"Send the miners in! (50% chance of collapse)\",\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                500,\n                                800\n                            ]\n                        }\n                    ],\n                    log: \"A massive gold deposit is secured before the chasm becomes unstable.\"\n                },\n                failureEffects: {\n                    cost: {\n                        stone: 150\n                    },\n                    rewards: [],\n                    log: \"A collapse traps mining equipment, which costs a large amount of stone to replace.\"\n                }\n            },\n            {\n                text: \"It's too unstable\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You rope off the dangerous chasm, prioritizing safety over greed.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A legendary beast is said to dwell in the nearby mountains.\",\n        choices: [\n            {\n                text: \"Form a grand hunting party (Cost: 250 food, 100 gold)\",\n                cost: {\n                    food: 250,\n                    gold: 100\n                },\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"heart_of_the_mountain\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"You find not a beast, but the Heart of the Mountain itself!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The beast is only a myth. The expedition returns empty-handed.\"\n                }\n            },\n            {\n                text: \"Let legends lie\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide the cost of the expedition is too high for a mere story.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A solar eclipse casts a strange twilight over the land.\",\n        choices: [\n            {\n                text: \"Perform a ritual of appeasement (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.01,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"whisper_of_the_creator\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Your ritual attunes you to the cosmos, granting a moment of divine productivity.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The sun returns as expected. Your gold is spent, but your people feel secure.\"\n                }\n            },\n            {\n                text: \"It is a natural phenomenon\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You reassure your people that it is simply the moon passing before the sun.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your village elder has fallen ill.\",\n        choices: [\n            {\n                text: \"Use precious herbs to heal them (Cost: 40 gold)\",\n                cost: {\n                    gold: 40\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"tome_of_insight\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Grateful, the elder shares wisdom that will help your civilization advance.\"\n                }\n            },\n            {\n                text: \"Let nature take its course\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You hope for the best. The elder recovers on their own after a few days.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Scouts report a wolf pack has become unusually aggressive, threatening woodcutters.\",\n        choices: [\n            {\n                text: \"Hunt the pack leaders (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The hunt is successful. The pack scatters, and the forest is safe again.\"\n                }\n            },\n            {\n                text: \"Recall woodcutters temporarily\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: -75\n                        }\n                    ],\n                    log: \"Woodcutting halts until the wolves move on, resulting in a loss of production.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A traveling storyteller captivates your people with tales of heroic deeds.\",\n        choices: [\n            {\n                text: \"Let them stay (Cost: 25 food)\",\n                cost: {\n                    food: 25\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"drillmasters_whistle\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Inspired, your people work harder, and the storyteller leaves a gift.\"\n                }\n            },\n            {\n                text: \"Send them away\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You have no time for stories and send the traveler away.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A gold rush has started in a nearby territory!\",\n        choices: [\n            {\n                text: \"Send a large expedition (Cost: 150 food)\",\n                cost: {\n                    food: 150\n                },\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                300,\n                                500\n                            ]\n                        }\n                    ],\n                    log: \"Your prospectors strike a rich vein of gold!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"You arrive too late. The rush is over, and your food is wasted.\"\n                }\n            },\n            {\n                text: \"It's a fool's errand\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide to focus on your own territory's resources.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Innovations in toolmaking have been proposed.\",\n        choices: [\n            {\n                text: \"Invest in new tools (Cost: 80 wood, 40 gold)\",\n                cost: {\n                    wood: 80,\n                    gold: 40\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"foresters_axe\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The new tools are a breakthrough, especially for forestry.\"\n                }\n            },\n            {\n                text: \"The old ways are better\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You reject the new designs, preferring traditional methods.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A local tournament is being organized.\",\n        choices: [\n            {\n                text: \"Sponsor the event (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The tournament is a grand success and a powerful banner is awarded to you as the patron.\"\n                }\n            },\n            {\n                text: \"It's a frivolous expense\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You forbid the tournament, ordering the people back to work.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A sacred grove is discovered. The trees seem to whisper.\",\n        choices: [\n            {\n                text: \"Listen to the trees (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"essence_of_the_earth\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The whispers of the trees teach you secrets of the land itself.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"You spend a peaceful day in the grove but learn nothing.\"\n                }\n            },\n            {\n                text: \"Harvest the timber\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 300\n                        }\n                    ],\n                    log: \"The sacred wood is of exceptional quality.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A vein of iron pyrite ('Fool's Gold') is discovered.\",\n        choices: [\n            {\n                text: \"Mine it anyway (60% success)\",\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"Your smiths manage to extract a small amount of real gold from the ore.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The ore is completely worthless. The effort is wasted.\"\n                }\n            },\n            {\n                text: \"Mark it and move on\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You wisely avoid wasting time on the deceptive minerals.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Heavy rains are making the roads impassable.\",\n        choices: [\n            {\n                text: \"Repair them with stone\",\n                cost: {\n                    stone: 100\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The roads are now paved and more durable than before.\"\n                }\n            },\n            {\n                text: \"Wait for the mud to dry\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You wait for the weather to improve, slowing down all movement for a time.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A visiting scholar offers to translate an ancient tome for a price.\",\n        choices: [\n            {\n                text: \"Pay the fee (Cost: 180 gold)\",\n                cost: {\n                    gold: 180\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"tome_of_insight\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The tome contains profound insights that will accelerate your society's progress.\"\n                }\n            },\n            {\n                text: \"We have no need for dead languages\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You send the scholar away, uninterested in their dusty books.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A child finds a strange, pulsating geode.\",\n        choices: [\n            {\n                text: \"Crack it open\",\n                successChance: 0.15,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"heart_of_the_mountain\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The geode contains the legendary Heart of the Mountain!\"\n                },\n                failureEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 50\n                        }\n                    ],\n                    log: \"The geode contains beautiful, but ordinary, crystals. You gain some stone.\"\n                }\n            },\n            {\n                text: \"Sell it to a merchant\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"A traveling merchant pays a good price for the strange rock.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Tool handles have been breaking frequently.\",\n        choices: [\n            {\n                text: \"Use better wood for new tools\",\n                cost: {\n                    wood: 120\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"foresters_axe\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The new tools are far more durable, and the innovation leads to better axe designs.\"\n                }\n            },\n            {\n                text: \"Tell the workers to be more careful\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You blame the workers for the breakages. Morale drops.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A legendary warrior is buried nearby. It's said their ghost guards a great prize.\",\n        choices: [\n            {\n                text: \"Brave the tomb (Cost: 100 food)\",\n                cost: {\n                    food: 100\n                },\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"horn_of_urgency\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"You appease the spirit and are rewarded with the legendary Horn of Urgency.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The ghost scares your explorers away. The food for the expedition is lost.\"\n                }\n            },\n            {\n                text: \"Respect the dead\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide it's best not to disturb the warrior's rest.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A traveling troupe of actors wishes to perform for your people.\",\n        choices: [\n            {\n                text: \"Allow the performance (Cost: 30 gold)\",\n                cost: {\n                    gold: 30\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The performance is a welcome diversion, raising spirits.\"\n                }\n            },\n            {\n                text: \"We have no time for plays\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You send the actors away. The people are disappointed.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your oldest villager claims to know a shortcut through the woods.\",\n        choices: [\n            {\n                text: \"Trust their memory (40% success)\",\n                successChance: 0.4,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 150\n                        }\n                    ],\n                    log: \"The shortcut leads to a hidden grove of berry bushes!\"\n                },\n                failureEffects: {\n                    cost: {\n                        food: 50\n                    },\n                    rewards: [],\n                    log: \"The villager gets lost, and the search party consumes extra rations.\"\n                }\n            },\n            {\n                text: \"Stick to the known paths\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You thank the elder for their suggestion but decide to play it safe.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A rare herb known for its energizing properties is found.\",\n        choices: [\n            {\n                text: \"Give it to the builders\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"scroll_of_haste\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The herb gives the builders a burst of energy, speeding their work.\"\n                }\n            },\n            {\n                text: \"Give it to the farmers\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"hearty_meal\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The herb helps the farmers work longer, bringing in a surplus of food.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A skilled orator is stirring up trouble, demanding more food for the people.\",\n        choices: [\n            {\n                text: \"Give in to their demands\",\n                cost: {\n                    food: 100\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You distribute extra food, and the crowd disperses peacefully.\"\n                }\n            },\n            {\n                text: \"Arrest them\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: -20\n                        }\n                    ],\n                    log: \"You arrest the orator, but it costs gold to pay the guards and quell the unrest.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An abandoned mine shaft is discovered. It seems to have been hastily deserted.\",\n        choices: [\n            {\n                text: \"Explore its depths (Cost: 70 food)\",\n                cost: {\n                    food: 70\n                },\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                100,\n                                250\n                            ]\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: [\n                                50,\n                                150\n                            ]\n                        }\n                    ],\n                    log: \"The miners left behind a decent amount of gold and stone!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The mine is barren. The expedition was a waste of food.\"\n                }\n            },\n            {\n                text: \"Seal the entrance\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You seal the dangerous-looking shaft to prevent any accidents.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A child has drawn a remarkably accurate map of the stars.\",\n        choices: [\n            {\n                text: \"This is a sign! (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successChance: 0.2,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"tome_of_insight\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The map contains astronomical data that helps your scholars make a breakthrough.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"It's a very nice drawing, but nothing more.\"\n                }\n            },\n            {\n                text: \"Praise their artistic talent\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You praise the child's drawing, encouraging their talent.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A swarm of bees has built a huge hive in the town square.\",\n        choices: [\n            {\n                text: \"Relocate the hive\",\n                cost: {\n                    wood: 40\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"The hive is safely relocated, and you gain a steady supply of honey.\"\n                }\n            },\n            {\n                text: \"Destroy it\",\n                successEffects: {\n                    rewards: [],\n                    log: \"The hive is destroyed. The bees are gone, but so is the potential for honey.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A foreign dignitary is impressed by your military.\",\n        choices: [\n            {\n                text: \"Accept their gift (Gain 'Drillmaster's Whistle')\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"drillmasters_whistle\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The dignitary gifts you an item to help with your training regimen.\"\n                }\n            },\n            {\n                text: \"Show them true strength (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You hold a military parade. The dignitary is impressed, but the display is costly.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A recent storm has washed up a strange, glowing piece of driftwood.\",\n        choices: [\n            {\n                text: \"Burn it in a ritual fire\",\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The smoke from the fire blesses your lands with abundance.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The wood burns with a pretty blue flame. Nothing else happens.\"\n                }\n            },\n            {\n                text: \"Carve it into a totem\",\n                cost: {\n                    wood: 20\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You carve a beautiful totem that becomes a local landmark.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An old woman offers to sell you a 'lucky' charm.\",\n        choices: [\n            {\n                text: \"Buy the charm (Cost: 30 gold)\",\n                cost: {\n                    gold: 30\n                },\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"builders_charm\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The charm seems to actually work, inspiring your builders!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"You bought a worthless trinket. The old woman is long gone.\"\n                }\n            },\n            {\n                text: \"We make our own luck\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You politely decline the offer.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your stonemasons are arguing over the best way to cut granite.\",\n        choices: [\n            {\n                text: \"Fund an experimental new method\",\n                cost: {\n                    stone: 50\n                },\n                successChance: 0.5,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 150\n                        }\n                    ],\n                    log: \"The new method is a breakthrough, yielding more stone from each block!\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The experiment fails, and the stone is wasted.\"\n                }\n            },\n            {\n                text: \"Tell them to work it out\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You order them to stop bickering and get back to work.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A particularly large and ancient tree in the forest has fallen in a storm.\",\n        choices: [\n            {\n                text: \"Harvest its wood\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 250\n                        }\n                    ],\n                    log: \"The ancient tree provides a massive amount of high-quality lumber.\"\n                }\n            },\n            {\n                text: \"Carve a monument from its stump\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"Your people spend the day carving a beautiful monument, boosting morale.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your people are growing restless and bored.\",\n        choices: [\n            {\n                text: \"Declare a holiday\",\n                cost: {\n                    food: 100\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"A day of feasting and games raises spirits, but at a cost.\"\n                }\n            },\n            {\n                text: \"Organize a building competition\",\n                cost: {\n                    wood: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"scroll_of_haste\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The competition is fierce, and new, faster building techniques are discovered.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A prospector claims to have found a rich mineral vein, but it's in dangerous territory.\",\n        choices: [\n            {\n                text: \"Fund his risky expedition (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.4,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                400,\n                                700\n                            ]\n                        }\n                    ],\n                    log: \"The risk pays off! The vein is richer than you imagined.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The prospector returns empty-handed, having lost your investment.\"\n                }\n            },\n            {\n                text: \"It's not worth the danger\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide against the risky venture.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A new type of crop is discovered that could be more resilient to drought.\",\n        choices: [\n            {\n                text: \"Replace some old fields (Cost: 100 wood)\",\n                cost: {\n                    wood: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"golden_harvest\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The new crop is a miracle, promising a golden harvest.\"\n                }\n            },\n            {\n                text: \"Stick with the traditional crops\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide not to risk your food supply on an unknown crop.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A master blacksmith has passed away, leaving his legendary forge to you.\",\n        choices: [\n            {\n                text: \"Study his notes (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successChance: 0.2,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"His notes contain secrets of forging that inspire your military.\"\n                }\n            },\n            {\n                text: \"Give him a state funeral\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You honor the blacksmith with a grand funeral. His legacy lives on.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A fissure in the earth has opened up, releasing a strange, shimmering gas.\",\n        choices: [\n            {\n                text: \"Bottle the gas for study\",\n                cost: {\n                    gold: 100\n                },\n                successChance: 0.05,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"whisper_of_the_creator\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The gas has reality-bending properties, allowing you to complete all tasks instantly.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The gas is inert and harmless. The expensive containers you built are wasted.\"\n                }\n            },\n            {\n                text: \"Evacuate the area\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You evacuate the area until the strange gas dissipates.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A group of refugees arrives, fleeing a war-torn land. They are skilled builders.\",\n        choices: [\n            {\n                text: \"Welcome them (Gain 2 villagers)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"unit\",\n                            unitType: \"villager\",\n                            amount: 2\n                        }\n                    ],\n                    log: \"You welcome the refugees. Their skills will be a great asset.\"\n                }\n            },\n            {\n                text: \"Turn them away\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You cannot support more people and must turn the refugees away.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A cart full of stone breaks an axle in your town center.\",\n        choices: [\n            {\n                text: \"Help repair the cart\",\n                cost: {\n                    wood: 20\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 100\n                        }\n                    ],\n                    log: \"The grateful mason leaves you with a portion of his stone as thanks.\"\n                }\n            },\n            {\n                text: \"Fine him for blocking the road\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 30\n                        }\n                    ],\n                    log: \"You fine the mason. He pays, but leaves in a huff.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A child dreams of a place where the rocks 'sing'.\",\n        choices: [\n            {\n                text: \"Send a party to the place in the dream\",\n                cost: {\n                    food: 50\n                },\n                successChance: 0.15,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"heart_of_the_mountain\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The dream was a vision! You've found the Heart of the Mountain.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The place from the dream is just a normal pile of rocks.\"\n                }\n            },\n            {\n                text: \"It was just a dream\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You dismiss the child's dream as fantasy.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A powerful storm is on the horizon.\",\n        choices: [\n            {\n                text: \"Reinforce buildings (Cost: 100 wood, 50 stone)\",\n                cost: {\n                    wood: 100,\n                    stone: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"Your buildings withstand the storm without issue thanks to your preparations.\"\n                }\n            },\n            {\n                text: \"Hope for the best\",\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [],\n                    log: \"The storm passes with only minor damage.\"\n                },\n                failureEffects: {\n                    cost: {\n                        wood: 150\n                    },\n                    rewards: [],\n                    log: \"The storm is devastating, causing widespread damage that costs a lot of wood to repair.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A wandering monk offers to teach your people the art of meditation.\",\n        choices: [\n            {\n                text: \"Accept his teachings (Cost: 50 food)\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Meditation brings focus and efficiency, leading to a pact of plenty.\"\n                }\n            },\n            {\n                text: \"We prefer action to inaction\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decline the monk's offer.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Scouts have found a pristine, untouched ancient forest.\",\n        choices: [\n            {\n                text: \"Establish a logging camp (Cost: 50 wood)\",\n                cost: {\n                    wood: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 400\n                        }\n                    ],\n                    log: \"The ancient forest provides an enormous bounty of wood.\"\n                }\n            },\n            {\n                text: \"Declare it a protected reserve\",\n                successChance: 0.1,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"foresters_axe\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The spirit of the forest rewards your respect with a blessed axe.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"You preserve the forest. Your people appreciate its beauty.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A con artist is selling 'invincibility potions' to your soldiers.\",\n        choices: [\n            {\n                text: \"Arrest the con artist\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 40\n                        }\n                    ],\n                    log: \"You arrest the fraud and confiscate their earnings.\"\n                }\n            },\n            {\n                text: \"Buy a potion for testing (Cost: 10 gold)\",\n                cost: {\n                    gold: 10\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"It's just colored water. You expose the fraud publicly.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An alchemist offers a potion that can 'transmute' resources.\",\n        choices: [\n            {\n                text: \"Turn 100 wood into gold (60% success)\",\n                cost: {\n                    wood: 100\n                },\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 80\n                        }\n                    ],\n                    log: \"The transmutation works! It's not a perfect conversion, but it's profitable.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The potion fizzes and turns the wood into a pile of useless sludge.\"\n                }\n            },\n            {\n                text: \"This is witchcraft!\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You accuse the alchemist of witchcraft and drive them out of town.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A recent victory has your soldiers celebrating loudly.\",\n        choices: [\n            {\n                text: \"Let them celebrate\",\n                cost: {\n                    food: 75\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The celebration is good for morale, but consumes a good amount of food and drink.\"\n                }\n            },\n            {\n                text: \"Discipline is key\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You order the soldiers back to their posts. They grumble, but obey.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A trader from a far-off desert land offers exotic spices.\",\n        choices: [\n            {\n                text: \"Trade food for spices (Cost: 100 food)\",\n                cost: {\n                    food: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: 120\n                        }\n                    ],\n                    log: \"The spices are a luxury item you easily trade for a large amount of gold.\"\n                }\n            },\n            {\n                text: \"We have no need for spices\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decline the trader's offer.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A pack of territorial boars have made a nearby berry patch their home.\",\n        choices: [\n            {\n                text: \"Hunt the boars\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 150\n                        }\n                    ],\n                    log: \"You clear out the boars, gaining access to the berries and providing meat for your people.\"\n                }\n            },\n            {\n                text: \"Find another patch\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide it's not worth the effort and send your gatherers elsewhere.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A strange fog has rolled in, making it hard to work.\",\n        choices: [\n            {\n                text: \"Light guidance fires (Cost: 40 wood)\",\n                cost: {\n                    wood: 40\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The fires help your workers navigate the fog, and work continues as normal.\"\n                }\n            },\n            {\n                text: \"Halt outdoor work\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: -50\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: -50\n                        }\n                    ],\n                    log: \"All outdoor gathering stops until the fog lifts, causing a loss in production.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A skilled hunter offers to track game for your settlement.\",\n        choices: [\n            {\n                text: \"Hire them (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 200\n                        }\n                    ],\n                    log: \"The hunter is true to their word and brings in a massive haul of game.\"\n                }\n            },\n            {\n                text: \"We can hunt for ourselves\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You politely decline the hunter's services.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your farmers have developed a new, more effective fertilizer.\",\n        choices: [\n            {\n                text: \"Implement it immediately (Cost: 80 wood)\",\n                cost: {\n                    wood: 80\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"golden_harvest\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The fertilizer works wonders, ensuring a massive, golden harvest.\"\n                }\n            },\n            {\n                text: \"What if it poisons the soil?\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You are too cautious and stick to the old ways.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A retired general offers to write a treatise on warfare for your library.\",\n        choices: [\n            {\n                text: \"Commission the work (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"banner_of_command\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The treatise is a masterpiece of strategy and inspires your commanders.\"\n                }\n            },\n            {\n                text: \"We learn from doing, not reading\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You believe experience is the only true teacher and decline the offer.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A prophecy foretells a great doom, but also a great reward for the faithful.\",\n        choices: [\n            {\n                text: \"Make a great sacrifice (Cost: 200 of each resource)\",\n                cost: {\n                    food: 200,\n                    wood: 200,\n                    gold: 200,\n                    stone: 200\n                },\n                successChance: 0.02,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"whisper_of_the_creator\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"Your faith is rewarded! A divine power washes over your lands.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The doom does not come to pass. Your sacrifice seems to have been for nothing.\"\n                }\n            },\n            {\n                text: \"Prophecies are nonsense\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You ignore the prophecy and focus on the present.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"The local river has flooded its banks, depositing rich, fertile silt on your farms.\",\n        choices: [\n            {\n                text: \"Capitalize on the opportunity!\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"food\",\n                            amount: 250\n                        }\n                    ],\n                    log: \"Your farmers work the new soil, bringing in a record-breaking haul of food.\"\n                }\n            },\n            {\n                text: \"It will take time to clear\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide to wait for the fields to dry normally.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A cache of old, but usable, building materials has been found.\",\n        choices: [\n            {\n                text: \"Add them to the stockpile\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"wood\",\n                            amount: 75\n                        },\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 75\n                        }\n                    ],\n                    log: \"The materials are a welcome addition to your reserves.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A famous poet wishes to become your civilization's artist-in-residence.\",\n        choices: [\n            {\n                text: \"Grant them a stipend (Cost: 40 gold)\",\n                cost: {\n                    gold: 40\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The poet's work brings culture and joy to your people.\"\n                }\n            },\n            {\n                text: \"Poetry doesn't fill bellies\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You send the poet away, focusing on practical needs.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A vein of beautiful marble has been discovered.\",\n        choices: [\n            {\n                text: \"Quarry it for building (Gain 150 stone)\",\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"stone\",\n                            amount: 150\n                        }\n                    ],\n                    log: \"The marble is excellent building material.\"\n                }\n            },\n            {\n                text: \"Use it for statues (Cost: 50 gold)\",\n                cost: {\n                    gold: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"You commission beautiful statues, which become a symbol of your civilization's prosperity.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"Your scouts have found a pass through the mountains, but it is treacherous.\",\n        choices: [\n            {\n                text: \"Establish a trade route (Cost: 100 wood)\",\n                cost: {\n                    wood: 100\n                },\n                successChance: 0.6,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"resource\",\n                            resource: \"gold\",\n                            amount: [\n                                200,\n                                350\n                            ]\n                        }\n                    ],\n                    log: \"The trade route is profitable, bringing in a steady stream of gold.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"A rockslide closes the pass. The wood used for supports is lost.\"\n                }\n            },\n            {\n                text: \"It is too dangerous to use\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You decide the risk of using the pass is too great.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"An inventor has created a new type of plow.\",\n        choices: [\n            {\n                text: \"Equip your farmers (Cost: 100 gold)\",\n                cost: {\n                    gold: 100\n                },\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"pact_of_plenty\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The new plows dramatically increase farm yields, leading to an era of plenty.\"\n                }\n            },\n            {\n                text: \"It looks flimsy\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You are skeptical of the invention and refuse to fund it.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"The anniversary of your civilization's founding is approaching.\",\n        choices: [\n            {\n                text: \"Declare a week of games (Cost: 200 food)\",\n                cost: {\n                    food: 200\n                },\n                successChance: 0.2,\n                successEffects: {\n                    rewards: [\n                        {\n                            type: \"item\",\n                            itemId: \"horn_of_urgency\",\n                            amount: 1\n                        }\n                    ],\n                    log: \"The games are legendary! The victor wins a mythical Horn.\"\n                },\n                failureEffects: {\n                    rewards: [],\n                    log: \"The games are a great success and morale is at an all-time high.\"\n                }\n            },\n            {\n                text: \"A simple day of rest will do\",\n                cost: {\n                    food: 50\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The people appreciate the day off to spend with their families.\"\n                }\n            }\n        ]\n    },\n    {\n        message: \"A local hero has passed away in their sleep.\",\n        choices: [\n            {\n                text: \"Build a monument in their honor\",\n                cost: {\n                    stone: 150\n                },\n                successEffects: {\n                    rewards: [],\n                    log: \"The monument inspires your people for generations to come.\"\n                }\n            },\n            {\n                text: \"Give them a quiet funeral\",\n                successEffects: {\n                    rewards: [],\n                    log: \"You give the hero a respectful, but simple, burial.\"\n                }\n            }\n        ]\n    }\n];\nconst PREDEFINED_AGES_MAP = {\n    \"Nomadic Age\": {\n        nextAgeName: \"Feudal Age\",\n        description: \"Society organizes under lords and vassals, unlocking new military and economic structures.\"\n    },\n    \"Feudal Age\": {\n        nextAgeName: \"Castle Age\",\n        description: \"Powerful fortifications and advanced siege weaponry mark this new era of warfare and defense.\"\n    },\n    \"Castle Age\": {\n        nextAgeName: \"Imperial Age\",\n        description: \"Your civilization becomes a true empire, with unparalleled economic and military might.\"\n    },\n    \"Imperial Age\": {\n        nextAgeName: \"Post-Imperial Age\",\n        description: \"The pinnacle of technology and culture. All paths are now open to you.\"\n    },\n    \"default\": {\n        nextAgeName: \"Age of Legends\",\n        description: \"Your civilization transcends history and becomes a legend.\"\n    }\n};\nconst PREDEFINED_AGES = [\n    {\n        name: \"Nomadic Age\",\n        description: \"A scattered tribe, learning to survive.\"\n    },\n    {\n        name: \"Feudal Age\",\n        description: \"Society organizes under lords and vassals, unlocking new military and economic structures.\"\n    },\n    {\n        name: \"Castle Age\",\n        description: \"Powerful fortifications and advanced siege weaponry mark this new era of warfare and defense.\"\n    },\n    {\n        name: \"Imperial Age\",\n        description: \"Your civilization becomes a true empire, with unparalleled economic and military might.\"\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/predefinedContent.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./services/dbService.ts":
/*!*******************************!*\
  !*** ./services/dbService.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteCustomAge: function() { return /* binding */ deleteCustomAge; },\n/* harmony export */   deleteGameState: function() { return /* binding */ deleteGameState; },\n/* harmony export */   getAllCustomAges: function() { return /* binding */ getAllCustomAges; },\n/* harmony export */   getAllSaveNames: function() { return /* binding */ getAllSaveNames; },\n/* harmony export */   loadGameState: function() { return /* binding */ loadGameState; },\n/* harmony export */   saveCustomAge: function() { return /* binding */ saveCustomAge; },\n/* harmony export */   saveGameState: function() { return /* binding */ saveGameState; }\n/* harmony export */ });\nconst DB_NAME = \"GeminiEmpiresDB\";\nconst GAME_STATE_STORE_NAME = \"gameState\";\nconst CUSTOM_AGES_STORE_NAME = \"customAges\";\nconst DB_VERSION = 2; // Incremented version\nconst openDB = ()=>{\n    return new Promise((resolve, reject)=>{\n        const request = indexedDB.open(DB_NAME, DB_VERSION);\n        request.onupgradeneeded = (event)=>{\n            const db = request.result;\n            if (!db.objectStoreNames.contains(GAME_STATE_STORE_NAME)) {\n                db.createObjectStore(GAME_STATE_STORE_NAME);\n            }\n            if (!db.objectStoreNames.contains(CUSTOM_AGES_STORE_NAME)) {\n                db.createObjectStore(CUSTOM_AGES_STORE_NAME, {\n                    keyPath: \"id\"\n                });\n            }\n        };\n        request.onsuccess = ()=>{\n            resolve(request.result);\n        };\n        request.onerror = ()=>{\n            console.error(\"IndexedDB error:\", request.error);\n            reject(request.error);\n        };\n    });\n};\nconst saveGameState = async (saveName, state)=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(GAME_STATE_STORE_NAME, \"readwrite\");\n        const store = transaction.objectStore(GAME_STATE_STORE_NAME);\n        store.put(state, saveName);\n        return new Promise((resolve, reject)=>{\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        });\n    } catch (error) {\n        console.error(\"Failed to save game state:\", error);\n    }\n};\nconst loadGameState = async (saveName)=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(GAME_STATE_STORE_NAME, \"readonly\");\n        const store = transaction.objectStore(GAME_STATE_STORE_NAME);\n        const request = store.get(saveName);\n        return new Promise((resolve, reject)=>{\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                console.error(\"Failed to load game state:\", request.error);\n                reject(request.error);\n            };\n        });\n    } catch (error) {\n        console.error(\"Failed to open DB for loading:\", error);\n        return undefined;\n    }\n};\nconst getAllSaveNames = async ()=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(GAME_STATE_STORE_NAME, \"readonly\");\n        const store = transaction.objectStore(GAME_STATE_STORE_NAME);\n        const request = store.getAllKeys();\n        return new Promise((resolve, reject)=>{\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                console.error(\"Failed to get all save names:\", request.error);\n                reject(request.error);\n            };\n        });\n    } catch (error) {\n        console.error(\"Failed to open DB for getting save names:\", error);\n        return [];\n    }\n};\nconst deleteGameState = async (saveName)=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(GAME_STATE_STORE_NAME, \"readwrite\");\n        const store = transaction.objectStore(GAME_STATE_STORE_NAME);\n        store.delete(saveName);\n        return new Promise((resolve, reject)=>{\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        });\n    } catch (error) {\n        console.error(\"Failed to delete game state:\", error);\n    }\n};\n// --- Custom Age Functions ---\nconst saveCustomAge = async (age)=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(CUSTOM_AGES_STORE_NAME, \"readwrite\");\n        const store = transaction.objectStore(CUSTOM_AGES_STORE_NAME);\n        store.put(age);\n        return new Promise((resolve, reject)=>{\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        });\n    } catch (error) {\n        console.error(\"Failed to save custom age:\", error);\n    }\n};\nconst getAllCustomAges = async ()=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(CUSTOM_AGES_STORE_NAME, \"readonly\");\n        const store = transaction.objectStore(CUSTOM_AGES_STORE_NAME);\n        const request = store.getAll();\n        return new Promise((resolve, reject)=>{\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                console.error(\"Failed to load custom ages:\", request.error);\n                reject(request.error);\n            };\n        });\n    } catch (error) {\n        console.error(\"Failed to open DB for loading custom ages:\", error);\n        return [];\n    }\n};\nconst deleteCustomAge = async (id)=>{\n    try {\n        const db = await openDB();\n        const transaction = db.transaction(CUSTOM_AGES_STORE_NAME, \"readwrite\");\n        const store = transaction.objectStore(CUSTOM_AGES_STORE_NAME);\n        store.delete(id);\n        return new Promise((resolve, reject)=>{\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        });\n    } catch (error) {\n        console.error(\"Failed to delete custom age:\", error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/dbService.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./services/geminiService.ts":
/*!***********************************!*\
  !*** ./services/geminiService.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPredefinedAge: function() { return /* binding */ getPredefinedAge; },\n/* harmony export */   getPredefinedCivilization: function() { return /* binding */ getPredefinedCivilization; },\n/* harmony export */   getPredefinedGameEvent: function() { return /* binding */ getPredefinedGameEvent; }\n/* harmony export */ });\n/* harmony import */ var _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/predefinedContent */ \"(app-pages-browser)/./data/predefinedContent.ts\");\n\nlet civIndex = 0;\n/**\n * Gets a predefined civilization from a rotating list.\n * This ensures a new game starts with a different civilization.\n * @returns A complete Civilization object.\n */ function getPredefinedCivilization() {\n    const civData = _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_CIVILIZATIONS[civIndex % _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_CIVILIZATIONS.length];\n    const bannerUrl = _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_BANNER_URLS[civIndex % _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_BANNER_URLS.length];\n    civIndex++; // Increment for the next new game\n    return {\n        ...civData,\n        bannerUrl\n    };\n}\n/**\n * Gets a random predefined game event.\n * @returns A GameEvent object.\n */ function getPredefinedGameEvent() {\n    const randomIndex = Math.floor(Math.random() * _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_EVENTS.length);\n    return _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_EVENTS[randomIndex];\n}\n/**\n * Gets the next age based on the current age from a predefined progression.\n * @param currentAge - The player's current age.\n * @returns An object with the next age's name and description.\n */ function getPredefinedAge(currentAge) {\n    return _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_AGES_MAP[currentAge] || _data_predefinedContent__WEBPACK_IMPORTED_MODULE_0__.PREDEFINED_AGES_MAP[\"default\"];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2dlbWluaVNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNxSTtBQUdySSxJQUFJSSxXQUFXO0FBRWY7Ozs7Q0FJQyxHQUNNLFNBQVNDO0lBQ1osTUFBTUMsVUFBVU4sNkVBQXdCLENBQUNJLFdBQVdKLDZFQUF3QkEsQ0FBQ08sTUFBTSxDQUFDO0lBQ3BGLE1BQU1DLFlBQVlQLDJFQUFzQixDQUFDRyxXQUFXSCwyRUFBc0JBLENBQUNNLE1BQU0sQ0FBQztJQUVsRkgsWUFBWSxrQ0FBa0M7SUFFOUMsT0FBTztRQUFFLEdBQUdFLE9BQU87UUFBRUU7SUFBVTtBQUNuQztBQUVBOzs7Q0FHQyxHQUNNLFNBQVNDO0lBQ1osTUFBTUMsY0FBY0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQUtYLHNFQUFpQkEsQ0FBQ0ssTUFBTTtJQUN2RSxPQUFPTCxzRUFBaUIsQ0FBQ1EsWUFBWTtBQUN6QztBQUVBOzs7O0NBSUMsR0FDTSxTQUFTSSxpQkFBaUJDLFVBQWtCO0lBQy9DLE9BQU9aLHdFQUFtQixDQUFDWSxXQUFXLElBQUlaLHdFQUFtQixDQUFDLFVBQVU7QUFDNUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvZ2VtaW5pU2VydmljZS50cz9kMmEzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgUFJFREVGSU5FRF9DSVZJTElaQVRJT05TLCBQUkVERUZJTkVEX0JBTk5FUl9VUkxTLCBQUkVERUZJTkVEX0VWRU5UUywgUFJFREVGSU5FRF9BR0VTX01BUCB9IGZyb20gJy4uL2RhdGEvcHJlZGVmaW5lZENvbnRlbnQnO1xuaW1wb3J0IHR5cGUgeyBDaXZpbGl6YXRpb24sIEdhbWVFdmVudCB9IGZyb20gJy4uL3R5cGVzJztcblxubGV0IGNpdkluZGV4ID0gMDtcblxuLyoqXG4gKiBHZXRzIGEgcHJlZGVmaW5lZCBjaXZpbGl6YXRpb24gZnJvbSBhIHJvdGF0aW5nIGxpc3QuXG4gKiBUaGlzIGVuc3VyZXMgYSBuZXcgZ2FtZSBzdGFydHMgd2l0aCBhIGRpZmZlcmVudCBjaXZpbGl6YXRpb24uXG4gKiBAcmV0dXJucyBBIGNvbXBsZXRlIENpdmlsaXphdGlvbiBvYmplY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmVkZWZpbmVkQ2l2aWxpemF0aW9uKCk6IENpdmlsaXphdGlvbiB7XG4gICAgY29uc3QgY2l2RGF0YSA9IFBSRURFRklORURfQ0lWSUxJWkFUSU9OU1tjaXZJbmRleCAlIFBSRURFRklORURfQ0lWSUxJWkFUSU9OUy5sZW5ndGhdO1xuICAgIGNvbnN0IGJhbm5lclVybCA9IFBSRURFRklORURfQkFOTkVSX1VSTFNbY2l2SW5kZXggJSBQUkVERUZJTkVEX0JBTk5FUl9VUkxTLmxlbmd0aF07XG4gICAgXG4gICAgY2l2SW5kZXgrKzsgLy8gSW5jcmVtZW50IGZvciB0aGUgbmV4dCBuZXcgZ2FtZVxuXG4gICAgcmV0dXJuIHsgLi4uY2l2RGF0YSwgYmFubmVyVXJsIH07XG59XG5cbi8qKlxuICogR2V0cyBhIHJhbmRvbSBwcmVkZWZpbmVkIGdhbWUgZXZlbnQuXG4gKiBAcmV0dXJucyBBIEdhbWVFdmVudCBvYmplY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmVkZWZpbmVkR2FtZUV2ZW50KCk6IEdhbWVFdmVudCB7XG4gICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBQUkVERUZJTkVEX0VWRU5UUy5sZW5ndGgpO1xuICAgIHJldHVybiBQUkVERUZJTkVEX0VWRU5UU1tyYW5kb21JbmRleF07XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbmV4dCBhZ2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgYWdlIGZyb20gYSBwcmVkZWZpbmVkIHByb2dyZXNzaW9uLlxuICogQHBhcmFtIGN1cnJlbnRBZ2UgLSBUaGUgcGxheWVyJ3MgY3VycmVudCBhZ2UuXG4gKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCB0aGUgbmV4dCBhZ2UncyBuYW1lIGFuZCBkZXNjcmlwdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByZWRlZmluZWRBZ2UoY3VycmVudEFnZTogc3RyaW5nKTogeyBuZXh0QWdlTmFtZTogc3RyaW5nOyBkZXNjcmlwdGlvbjogc3RyaW5nIH0ge1xuICAgIHJldHVybiBQUkVERUZJTkVEX0FHRVNfTUFQW2N1cnJlbnRBZ2VdIHx8IFBSRURFRklORURfQUdFU19NQVBbJ2RlZmF1bHQnXTtcbn1cbiJdLCJuYW1lcyI6WyJQUkVERUZJTkVEX0NJVklMSVpBVElPTlMiLCJQUkVERUZJTkVEX0JBTk5FUl9VUkxTIiwiUFJFREVGSU5FRF9FVkVOVFMiLCJQUkVERUZJTkVEX0FHRVNfTUFQIiwiY2l2SW5kZXgiLCJnZXRQcmVkZWZpbmVkQ2l2aWxpemF0aW9uIiwiY2l2RGF0YSIsImxlbmd0aCIsImJhbm5lclVybCIsImdldFByZWRlZmluZWRHYW1lRXZlbnQiLCJyYW5kb21JbmRleCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImdldFByZWRlZmluZWRBZ2UiLCJjdXJyZW50QWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/geminiService.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/types */ \"(app-pages-browser)/./types.ts\");\n/* harmony import */ var _services_geminiService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/services/geminiService */ \"(app-pages-browser)/./services/geminiService.ts\");\n/* harmony import */ var _services_dbService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/services/dbService */ \"(app-pages-browser)/./services/dbService.ts\");\n/* harmony import */ var _services_nameService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/services/nameService */ \"(app-pages-browser)/./services/nameService.ts\");\n/* harmony import */ var _data_itemContent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/data/itemContent */ \"(app-pages-browser)/./data/itemContent.ts\");\n/* harmony import */ var _data_predefinedContent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/data/predefinedContent */ \"(app-pages-browser)/./data/predefinedContent.ts\");\n/* harmony import */ var _components_GameUI__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/GameUI */ \"(app-pages-browser)/./components/GameUI.tsx\");\n/* harmony import */ var _components_StartScreen__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/StartScreen */ \"(app-pages-browser)/./components/StartScreen.tsx\");\n/* harmony import */ var _components_LoadingScreen__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/LoadingScreen */ \"(app-pages-browser)/./components/LoadingScreen.tsx\");\n/* harmony import */ var _components_BuildPanel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/components/BuildPanel */ \"(app-pages-browser)/./components/BuildPanel.tsx\");\n/* harmony import */ var _components_NotificationManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/components/NotificationManager */ \"(app-pages-browser)/./components/NotificationManager.tsx\");\n/* harmony import */ var _components_UnitManagementPanel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/components/UnitManagementPanel */ \"(app-pages-browser)/./components/UnitManagementPanel.tsx\");\n/* harmony import */ var _components_BuildingManagementPanel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/components/BuildingManagementPanel */ \"(app-pages-browser)/./components/BuildingManagementPanel.tsx\");\n/* harmony import */ var _components_ResourceAssignmentPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/components/ResourceAssignmentPanel */ \"(app-pages-browser)/./components/ResourceAssignmentPanel.tsx\");\n/* harmony import */ var _components_CivilizationPanel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/components/CivilizationPanel */ \"(app-pages-browser)/./components/CivilizationPanel.tsx\");\n/* harmony import */ var _components_AllBuildingsPanel__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @/components/AllBuildingsPanel */ \"(app-pages-browser)/./components/AllBuildingsPanel.tsx\");\n/* harmony import */ var _components_InventoryPanel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @/components/InventoryPanel */ \"(app-pages-browser)/./components/InventoryPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst BUILDINGS_INFO = [\n    {\n        id: \"houses\",\n        name: \"House\",\n        description: \"Increases population capacity by 5.\",\n        cost: {\n            wood: 50\n        },\n        isUnique: false,\n        buildTime: 15,\n        hp: 550\n    },\n    {\n        id: \"barracks\",\n        name: \"Barracks\",\n        description: \"Allows training of Swordsmen.\",\n        cost: {\n            wood: 150,\n            stone: 50\n        },\n        isUnique: true,\n        buildTime: 60,\n        hp: 1200\n    },\n    {\n        id: \"archeryRange\",\n        name: \"Archery Range\",\n        description: \"Allows training of Archers.\",\n        cost: {\n            wood: 175\n        },\n        isUnique: true,\n        buildTime: 60,\n        hp: 1200\n    },\n    {\n        id: \"stable\",\n        name: \"Stables\",\n        description: \"Allows training of Knights.\",\n        cost: {\n            wood: 175,\n            gold: 75\n        },\n        isUnique: true,\n        buildTime: 75,\n        hp: 1200\n    },\n    {\n        id: \"siegeWorkshop\",\n        name: \"Siege Workshop\",\n        description: \"Constructs powerful Catapults.\",\n        cost: {\n            wood: 200,\n            gold: 150\n        },\n        isUnique: true,\n        buildTime: 90,\n        hp: 2100\n    },\n    {\n        id: \"blacksmith\",\n        name: \"Blacksmith\",\n        description: \"Researches infantry and cavalry upgrades.\",\n        cost: {\n            wood: 100,\n            gold: 100\n        },\n        isUnique: true,\n        buildTime: 45,\n        hp: 2100\n    },\n    {\n        id: \"watchTower\",\n        name: \"Watch Tower\",\n        description: \"Provides defense against raids.\",\n        cost: {\n            stone: 125\n        },\n        isUnique: true,\n        buildTime: 45,\n        hp: 1500\n    },\n    {\n        id: \"townCenter\",\n        name: \"Town Center\",\n        description: \"The heart of your settlement.\",\n        cost: {},\n        isUnique: true,\n        buildTime: 0,\n        hp: 2400\n    }\n];\nconst UNIT_INFO = [\n    {\n        id: \"swordsman\",\n        name: \"Swordsman\",\n        description: \"Basic melee infantry.\",\n        cost: {\n            food: 60,\n            gold: 20\n        },\n        requiredBuilding: \"barracks\",\n        trainTime: 22\n    },\n    {\n        id: \"archer\",\n        name: \"Archer\",\n        description: \"Ranged unit effective against infantry.\",\n        cost: {\n            food: 30,\n            wood: 40\n        },\n        requiredBuilding: \"archeryRange\",\n        trainTime: 25\n    },\n    {\n        id: \"knight\",\n        name: \"Knight\",\n        description: \"Fast and powerful cavalry.\",\n        cost: {\n            food: 60,\n            gold: 75\n        },\n        requiredBuilding: \"stable\",\n        trainTime: 30\n    },\n    {\n        id: \"catapult\",\n        name: \"Catapult\",\n        description: \"Siege engine devastating to buildings.\",\n        cost: {\n            wood: 150,\n            gold: 150\n        },\n        requiredBuilding: \"siegeWorkshop\",\n        trainTime: 45\n    }\n];\nconst GATHER_INFO = {\n    food: {\n        rate: 10\n    },\n    wood: {\n        rate: 8\n    },\n    gold: {\n        rate: 5\n    },\n    stone: {\n        rate: 6\n    }\n};\nconst initialBuildingsState = {\n    houses: [],\n    barracks: [],\n    archeryRange: [],\n    stable: [],\n    siegeWorkshop: [],\n    blacksmith: [],\n    watchTower: [],\n    townCenter: []\n};\nconst MAP_DIMENSIONS = {\n    width: 25,\n    height: 18\n};\nconst GamePage = ()=>{\n    var _buildings_townCenter;\n    _s();\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.MENU);\n    const [civilization, setCivilization] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [resources, setResources] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        food: 200,\n        wood: 150,\n        gold: 50,\n        stone: 100\n    });\n    const [units, setUnits] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        villagers: [],\n        military: []\n    });\n    const [buildings, setBuildings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialBuildingsState);\n    const [currentAge, setCurrentAge] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Nomadic Age\");\n    const [gameLog, setGameLog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentEvent, setCurrentEvent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [resourceDeltas, setResourceDeltas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [activityStatus, setActivityStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Your story begins...\");\n    const [notifications, setNotifications] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [unlimitedResources, setUnlimitedResources] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [allSaves, setAllSaves] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentSaveName, setCurrentSaveName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [playerAction, setPlayerAction] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [activeTasks, setActiveTasks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [resourceNodes, setResourceNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [inventory, setInventory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeBuffs, setActiveBuffs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        resourceBoost: []\n    });\n    const [ageProgressionList, setAgeProgressionList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_data_predefinedContent__WEBPACK_IMPORTED_MODULE_7__.PREDEFINED_AGES);\n    // Panel States\n    const [buildPanelState, setBuildPanelState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        villagerId: null,\n        anchorRect: null\n    });\n    const [unitManagementPanel, setUnitManagementPanel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        type: null,\n        anchorRect: null\n    });\n    const [buildingManagementPanel, setBuildingManagementPanel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        type: null,\n        anchorRect: null\n    });\n    const [allBuildingsPanel, setAllBuildingsPanel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        anchorRect: null\n    });\n    const [assignmentPanelState, setAssignmentPanelState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        targetId: null,\n        targetType: null,\n        anchorRect: null\n    });\n    const [civPanelState, setCivPanelState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        anchorRect: null\n    });\n    const [inventoryPanelState, setInventoryPanelState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isOpen: false,\n        anchorRect: null\n    });\n    const deltaTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    const eventTimerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const lastTickRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Date.now());\n    const animationFrameRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const population = {\n        current: units.villagers.length + units.military.length,\n        capacity: (((_buildings_townCenter = buildings.townCenter) === null || _buildings_townCenter === void 0 ? void 0 : _buildings_townCenter.length) > 0 ? 20 : 0) + buildings.houses.length * 5\n    };\n    const fetchSavesAndAges = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        const names = await (0,_services_dbService__WEBPACK_IMPORTED_MODULE_4__.getAllSaveNames)();\n        setAllSaves(names);\n        const customAges = await (0,_services_dbService__WEBPACK_IMPORTED_MODULE_4__.getAllCustomAges)();\n        setAgeProgressionList([\n            ..._data_predefinedContent__WEBPACK_IMPORTED_MODULE_7__.PREDEFINED_AGES,\n            ...customAges\n        ]);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchSavesAndAges();\n    }, [\n        fetchSavesAndAges\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (gameState === _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING && civilization && currentSaveName) {\n            const fullState = {\n                civilization,\n                resources,\n                units,\n                buildings,\n                currentAge,\n                gameLog,\n                activeTasks,\n                resourceNodes,\n                inventory,\n                activeBuffs\n            };\n            (0,_services_dbService__WEBPACK_IMPORTED_MODULE_4__.saveGameState)(currentSaveName, fullState);\n        }\n    }, [\n        civilization,\n        resources,\n        units,\n        buildings,\n        currentAge,\n        gameLog,\n        gameState,\n        currentSaveName,\n        activeTasks,\n        resourceNodes,\n        inventory,\n        activeBuffs\n    ]);\n    const addNotification = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((message)=>{\n        const id = \"\".concat(Date.now(), \"-\").concat(Math.random());\n        setNotifications((prev)=>[\n                {\n                    id,\n                    message\n                }\n            ]);\n    }, []);\n    const removeNotification = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        setNotifications((prev)=>prev.filter((n)=>n.id !== id));\n    }, []);\n    const addToLog = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((message, icon)=>{\n        setGameLog((prev)=>[\n                {\n                    id: \"\".concat(Date.now(), \"-\").concat(Math.random()),\n                    message,\n                    icon\n                },\n                ...prev.slice(0, 19)\n            ]);\n    }, []);\n    const updateResources = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((deltas)=>{\n        setResources((prev)=>{\n            const newResources = {\n                ...prev\n            };\n            for(const key in deltas){\n                const resourceKey = key;\n                var _deltas_resourceKey;\n                newResources[resourceKey] = Math.max(0, newResources[resourceKey] + ((_deltas_resourceKey = deltas[resourceKey]) !== null && _deltas_resourceKey !== void 0 ? _deltas_resourceKey : 0));\n            }\n            return newResources;\n        });\n        setResourceDeltas((prev)=>({\n                ...prev,\n                ...deltas\n            }));\n        for(const key in deltas){\n            const resourceKey = key;\n            if (deltaTimeoutRef.current[resourceKey]) {\n                window.clearTimeout(deltaTimeoutRef.current[resourceKey]);\n            }\n            deltaTimeoutRef.current[resourceKey] = window.setTimeout(()=>{\n                setResourceDeltas((prev)=>{\n                    const newDeltas = {\n                        ...prev\n                    };\n                    delete newDeltas[resourceKey];\n                    return newDeltas;\n                });\n            }, 1500);\n        }\n    }, []);\n    const handleTaskCompletion = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((task)=>{\n        var _task_payload;\n        // Free up any villagers that were assigned to this task\n        if (((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : _task_payload.villagerIds) && task.payload.villagerIds.length > 0) {\n            setUnits((prev)=>({\n                    ...prev,\n                    villagers: prev.villagers.map((v)=>task.payload.villagerIds.includes(v.id) ? {\n                            ...v,\n                            currentTask: null\n                        } : v)\n                }));\n        }\n        switch(task.type){\n            case \"build\":\n                {\n                    const { buildingType, villagerIds, position } = task.payload;\n                    const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === buildingType);\n                    const [name] = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"building\", 1);\n                    const newBuilding = {\n                        id: task.id,\n                        name,\n                        position: position,\n                        currentHp: buildingInfo.hp\n                    };\n                    setBuildings((p)=>({\n                            ...p,\n                            [buildingType]: [\n                                ...p[buildingType],\n                                newBuilding\n                            ]\n                        }));\n                    if (villagerIds && villagerIds.length > 0) {\n                        addToLog(\"\".concat(villagerIds.length, \" builder(s) have constructed \").concat(name, \", a new \").concat(buildingInfo.name, \".\"), buildingType);\n                        setActivityStatus(\"Construction of \".concat(name, \" is complete.\"));\n                    }\n                    break;\n                }\n            case \"gather\":\n                {\n                    break;\n                }\n            case \"train_villager\":\n                {\n                    const { count } = task.payload;\n                    const newVillagerNames = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"villager\", count);\n                    const newVillagers = newVillagerNames.map((name)=>({\n                            id: \"\".concat(Date.now(), \"-\").concat(name),\n                            name,\n                            currentTask: null\n                        }));\n                    setUnits((p)=>({\n                            ...p,\n                            villagers: [\n                                ...p.villagers,\n                                ...newVillagers\n                            ]\n                        }));\n                    addToLog(\"\".concat(count, \" new villager(s) have joined your settlement.\"), \"villager\");\n                    setActivityStatus(\"\".concat(count, \" new villager(s) are ready to work.\"));\n                    break;\n                }\n            case \"train_military\":\n                {\n                    const { unitType, count } = task.payload;\n                    const unitInfo = UNIT_INFO.find((u)=>u.id === unitType);\n                    const newUnitNames = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"soldier\", count);\n                    const newUnits = newUnitNames.map((name)=>({\n                            id: \"\".concat(Date.now(), \"-\").concat(unitType, \"-\").concat(name),\n                            name,\n                            title: \"\",\n                            unitType: unitType\n                        }));\n                    setUnits((p)=>({\n                            ...p,\n                            military: [\n                                ...p.military,\n                                ...newUnits\n                            ]\n                        }));\n                    addToLog(\"\".concat(count, \" \").concat(unitInfo.name, \"(s) have been trained.\"), unitType);\n                    setActivityStatus(\"\".concat(count, \" new \").concat(unitInfo.name, \"(s) are ready for battle.\"));\n                    break;\n                }\n            case \"advance_age\":\n                {\n                    const currentIndex = ageProgressionList.findIndex((age)=>age.name === currentAge);\n                    const ageResult = ageProgressionList[currentIndex + 1] || {\n                        name: \"Age of Legends\",\n                        description: \"Your civilization transcends history and becomes a legend.\"\n                    };\n                    setCurrentAge(ageResult.name);\n                    addToLog(\"You have advanced to the \".concat(ageResult.name, \"!\"), \"age\");\n                    addToLog(ageResult.description, \"age\");\n                    setActivityStatus(\"Welcome to the \".concat(ageResult.name, \"!\"));\n                    break;\n                }\n        }\n    }, [\n        currentAge,\n        addToLog,\n        ageProgressionList\n    ]);\n    // Game Loop\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (gameState !== _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING) {\n            if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n            return;\n        }\n        const gameLoop = ()=>{\n            const now = Date.now();\n            const deltaTime = now - lastTickRef.current;\n            lastTickRef.current = now;\n            let completedTasks = [];\n            let resourceDeltasThisTick = {};\n            // Clean up expired buffs\n            setActiveBuffs((prev)=>{\n                var _prev_resourceBoost, _prev_resourceBoost1;\n                const newResourceBoosts = (_prev_resourceBoost = prev.resourceBoost) === null || _prev_resourceBoost === void 0 ? void 0 : _prev_resourceBoost.filter((b)=>b.endTime > now);\n                if ((newResourceBoosts === null || newResourceBoosts === void 0 ? void 0 : newResourceBoosts.length) !== ((_prev_resourceBoost1 = prev.resourceBoost) === null || _prev_resourceBoost1 === void 0 ? void 0 : _prev_resourceBoost1.length)) {\n                    addToLog(\"A resource gathering bonus has expired.\", \"system\");\n                }\n                return {\n                    ...prev,\n                    resourceBoost: newResourceBoosts\n                };\n            });\n            const tasksInProgress = activeTasks.map((task)=>{\n                if (now >= task.startTime + task.duration) {\n                    completedTasks.push(task);\n                    return null;\n                }\n                if (task.type === \"gather\") {\n                    var _activeBuffs_resourceBoost;\n                    const node = resourceNodes.find((n)=>{\n                        var _task_payload;\n                        return n.id === ((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : _task_payload.resourceNodeId);\n                    });\n                    const assignedVillagers = units.villagers.filter((v)=>v.currentTask === task.id);\n                    const villagerCount = assignedVillagers.length;\n                    if (!node || villagerCount === 0) {\n                        completedTasks.push(task); // Orphaned or empty gather task\n                        return null;\n                    }\n                    const baseRatePerSecond = GATHER_INFO[node.type].rate;\n                    let civBonusMultiplier = 1;\n                    if (civilization) {\n                        const bonusString = civilization.bonus.toLowerCase();\n                        const resourceString = node.type.toLowerCase();\n                        if (bonusString.includes(resourceString)) {\n                            const match = bonusString.match(/(\\d+)%/);\n                            if (match && match[1]) {\n                                civBonusMultiplier = 1 + parseInt(match[1], 10) / 100;\n                            }\n                        }\n                    }\n                    const itemBoost = (_activeBuffs_resourceBoost = activeBuffs.resourceBoost) === null || _activeBuffs_resourceBoost === void 0 ? void 0 : _activeBuffs_resourceBoost.find((b)=>b.resource === node.type);\n                    const itemBoostMultiplier = itemBoost ? itemBoost.multiplier : 1;\n                    const finalRatePerSecond = baseRatePerSecond * civBonusMultiplier * itemBoostMultiplier;\n                    const amountGatheredThisTick = finalRatePerSecond / 1000 * deltaTime * villagerCount;\n                    resourceDeltasThisTick[node.type] = (resourceDeltasThisTick[node.type] || 0) + amountGatheredThisTick;\n                }\n                return task;\n            }).filter(Boolean);\n            if (Object.keys(resourceDeltasThisTick).length > 0) {\n                updateResources(resourceDeltasThisTick);\n                setResourceNodes((prevNodes)=>{\n                    const newNodes = prevNodes.map((node)=>{\n                        const amountToDecrement = resourceDeltasThisTick[node.type];\n                        if (amountToDecrement) {\n                            const newAmount = node.amount - amountToDecrement;\n                            if (newAmount <= 0) {\n                                const taskId = \"gather-\".concat(node.id);\n                                const assigned = units.villagers.filter((v)=>v.currentTask === taskId);\n                                addToLog(\"\".concat(assigned.length, \" villager(s) depleted a \").concat(node.type, \" source, gaining \").concat(Math.floor(node.amount), \" \").concat(node.type, \".\"), node.type);\n                                setActivityStatus(\"A \".concat(node.type, \" source has been fully depleted.\"));\n                                const gatherTask = tasksInProgress.find((t)=>t.id === taskId);\n                                if (gatherTask) completedTasks.push(gatherTask);\n                                return null;\n                            }\n                            return {\n                                ...node,\n                                amount: newAmount\n                            };\n                        }\n                        return node;\n                    }).filter(Boolean);\n                    return newNodes;\n                });\n            }\n            const finalActiveTasks = tasksInProgress.filter((t)=>!completedTasks.some((ct)=>ct.id === t.id));\n            setActiveTasks(finalActiveTasks);\n            if (completedTasks.length > 0) {\n                completedTasks.forEach(handleTaskCompletion);\n            }\n            animationFrameRef.current = requestAnimationFrame(gameLoop);\n        };\n        animationFrameRef.current = requestAnimationFrame(gameLoop);\n        return ()=>{\n            if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n        };\n    }, [\n        gameState,\n        activeTasks,\n        resourceNodes,\n        handleTaskCompletion,\n        addToLog,\n        updateResources,\n        units.villagers,\n        civilization,\n        activeBuffs\n    ]);\n    const handleNewEvent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!civilization || currentEvent) return;\n        const event = (0,_services_geminiService__WEBPACK_IMPORTED_MODULE_3__.getPredefinedGameEvent)();\n        setCurrentEvent(event);\n        setActivityStatus(\"A new event requires your attention!\");\n    }, [\n        civilization,\n        currentEvent\n    ]);\n    const scheduleNextEvent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (eventTimerRef.current) {\n            clearTimeout(eventTimerRef.current);\n        }\n        const nextEventTime = (10 + Math.random() * 15) * 1000;\n        eventTimerRef.current = setTimeout(()=>handleNewEvent(), nextEventTime);\n    }, [\n        handleNewEvent\n    ]);\n    const generateResourceNodes = (existingPositions)=>{\n        const nodes = [];\n        const types = [\n            \"food\",\n            \"wood\",\n            \"gold\",\n            \"stone\"\n        ];\n        const numNodes = 20 + Math.floor(Math.random() * 10);\n        for(let i = 0; i < numNodes; i++){\n            let pos;\n            do {\n                pos = {\n                    x: Math.floor(Math.random() * MAP_DIMENSIONS.width),\n                    y: Math.floor(Math.random() * MAP_DIMENSIONS.height)\n                };\n            }while (existingPositions.has(\"\".concat(pos.x, \",\").concat(pos.y)));\n            existingPositions.add(\"\".concat(pos.x, \",\").concat(pos.y));\n            const type = types[Math.floor(Math.random() * types.length)];\n            const amount = Math.floor(Math.random() * (2500 - 500 + 1)) + 500;\n            nodes.push({\n                id: \"\".concat(Date.now(), \"-node-\").concat(i),\n                type,\n                position: pos,\n                amount\n            });\n        }\n        return nodes;\n    };\n    const handleStartNewGame = async (saveName)=>{\n        if (allSaves.includes(saveName)) {\n            addNotification('A saga named \"'.concat(saveName, '\" already exists.'));\n            return;\n        }\n        setGameState(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.LOADING);\n        setCurrentSaveName(saveName);\n        await fetchSavesAndAges();\n        const civ = (0,_services_geminiService__WEBPACK_IMPORTED_MODULE_3__.getPredefinedCivilization)();\n        setCivilization(civ);\n        setResources({\n            food: 200,\n            wood: 150,\n            gold: 50,\n            stone: 100\n        });\n        const initialVillagerNames = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"villager\", 3);\n        const initialVillagers = initialVillagerNames.map((name)=>({\n                id: \"\".concat(Date.now(), \"-\").concat(name),\n                name,\n                currentTask: null\n            }));\n        setUnits({\n            villagers: initialVillagers,\n            military: []\n        });\n        const [initialTCName] = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"building\", 1);\n        const tcPosition = {\n            x: Math.floor(MAP_DIMENSIONS.width / 2),\n            y: Math.floor(MAP_DIMENSIONS.height / 2)\n        };\n        const tcInfo = BUILDINGS_INFO.find((b)=>b.id === \"townCenter\");\n        const initialTC = {\n            id: \"\".concat(Date.now(), \"-tc\"),\n            name: initialTCName,\n            position: tcPosition,\n            currentHp: tcInfo.hp\n        };\n        setBuildings({\n            ...initialBuildingsState,\n            townCenter: [\n                initialTC\n            ]\n        });\n        setResourceNodes(generateResourceNodes(new Set([\n            \"\".concat(tcPosition.x, \",\").concat(tcPosition.y)\n        ])));\n        setCurrentAge(\"Nomadic Age\");\n        setGameLog([]);\n        setCurrentEvent(null);\n        setUnlimitedResources(false);\n        setActiveTasks([]);\n        setInventory([]);\n        setActiveBuffs({\n            resourceBoost: []\n        });\n        addToLog(\"\".concat(civ.name, \" has been founded!\"), \"system\");\n        addToLog(\"Your story begins...\", \"system\");\n        setGameState(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING);\n        setActivityStatus(\"Your settlement awaits your command.\");\n        fetchSavesAndAges();\n    };\n    const isVillagerBusy = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((villagerId)=>{\n        const villager = units.villagers.find((v)=>v.id === villagerId);\n        return !!(villager === null || villager === void 0 ? void 0 : villager.currentTask);\n    }, [\n        units.villagers\n    ]);\n    const getVillagerTaskDetails = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((villagerId)=>{\n        const villager = units.villagers.find((v)=>v.id === villagerId);\n        if (!villager || !villager.currentTask) {\n            return \"Idle\";\n        }\n        const task = activeTasks.find((t)=>t.id === villager.currentTask);\n        if (!task) {\n            return \"Idle (Finalizing Task)\";\n        }\n        if (task.type === \"build\") {\n            const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === task.payload.buildingType);\n            return \"Busy: Constructing \".concat((buildingInfo === null || buildingInfo === void 0 ? void 0 : buildingInfo.name) || \"a building\");\n        }\n        if (task.type === \"gather\") {\n            const node = resourceNodes.find((n)=>n.id === task.payload.resourceNodeId);\n            return \"Busy: Gathering \".concat((node === null || node === void 0 ? void 0 : node.type) || \"resources\");\n        }\n        return \"Idle\";\n    }, [\n        activeTasks,\n        resourceNodes,\n        units.villagers\n    ]);\n    const handleResumeGame = async (saveName)=>{\n        await fetchSavesAndAges();\n        const savedState = await (0,_services_dbService__WEBPACK_IMPORTED_MODULE_4__.loadGameState)(saveName);\n        if (savedState) {\n            var _savedState_units;\n            setGameState(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.LOADING);\n            setCurrentSaveName(saveName);\n            setCivilization(savedState.civilization);\n            setResources(savedState.resources);\n            let savedUnits = savedState.units || {\n                villagers: [],\n                military: []\n            };\n            if ((_savedState_units = savedState.units) === null || _savedState_units === void 0 ? void 0 : _savedState_units.soldiers) {\n                const migratedMilitary = savedState.units.soldiers.map((s)=>({\n                        ...s,\n                        unitType: \"swordsman\"\n                    }));\n                savedUnits = {\n                    villagers: savedUnits.villagers || [],\n                    military: migratedMilitary\n                };\n            }\n            const migratedVillagers = savedUnits.villagers.map((v)=>({\n                    ...v,\n                    currentTask: v.currentTask !== undefined ? v.currentTask : null\n                }));\n            const migratedTasks = (savedState.activeTasks || []).map((t)=>{\n                var _t_payload;\n                if (t.type === \"build\" && !((_t_payload = t.payload) === null || _t_payload === void 0 ? void 0 : _t_payload.villagerIds)) {\n                    return {\n                        ...t,\n                        payload: {\n                            ...t.payload,\n                            villagerIds: []\n                        }\n                    };\n                }\n                return t;\n            });\n            // Back-fill currentTask for older saves\n            migratedTasks.forEach((task)=>{\n                var _task_payload;\n                if ((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : _task_payload.villagerIds) {\n                    task.payload.villagerIds.forEach((vid)=>{\n                        const villager = migratedVillagers.find((v)=>v.id === vid);\n                        if (villager) villager.currentTask = task.id;\n                    });\n                }\n            });\n            setUnits({\n                ...savedUnits,\n                villagers: migratedVillagers\n            });\n            let finalBuildings = {\n                ...initialBuildingsState,\n                ...savedState.buildings || {}\n            };\n            Object.keys(finalBuildings).forEach((bType)=>{\n                const type = bType;\n                const info = BUILDINGS_INFO.find((b)=>b.id === type);\n                if (info) {\n                    finalBuildings[type] = finalBuildings[type].map((b)=>({\n                            ...b,\n                            currentHp: b.currentHp === undefined ? info.hp : b.currentHp\n                        }));\n                }\n            });\n            const constructionTasks = migratedTasks.filter((t)=>t.type === \"build\");\n            const occupiedCells = new Set([\n                ...Object.values(finalBuildings).flat().map((b)=>\"\".concat(b.position.x, \",\").concat(b.position.y)),\n                ...constructionTasks.map((t)=>\"\".concat(t.payload.position.x, \",\").concat(t.payload.position.y))\n            ]);\n            if (!finalBuildings.townCenter || finalBuildings.townCenter.length === 0) {\n                let tcPos = {\n                    x: 10,\n                    y: 5\n                };\n                while(occupiedCells.has(\"\".concat(tcPos.x, \",\").concat(tcPos.y))){\n                    tcPos.x++;\n                }\n                const [tcName] = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"building\", 1);\n                const tcInfo = BUILDINGS_INFO.find((b)=>b.id === \"townCenter\");\n                finalBuildings.townCenter = [\n                    {\n                        id: \"\".concat(Date.now(), \"-tc\"),\n                        name: tcName,\n                        position: tcPos,\n                        currentHp: tcInfo.hp\n                    }\n                ];\n                occupiedCells.add(\"\".concat(tcPos.x, \",\").concat(tcPos.y));\n            }\n            const firstBuilding = Object.values(finalBuildings).flat()[0];\n            if (firstBuilding && typeof firstBuilding === \"object\" && !(\"position\" in firstBuilding)) {\n                const migrated = {\n                    ...initialBuildingsState\n                };\n                let y = 3;\n                Object.entries(finalBuildings).forEach((param)=>{\n                    let [type, instances] = param;\n                    let x = 5;\n                    instances.forEach((inst)=>{\n                        while(occupiedCells.has(\"\".concat(x, \",\").concat(y))){\n                            x++;\n                        }\n                        const info = BUILDINGS_INFO.find((b)=>b.id === type);\n                        migrated[type].push({\n                            ...inst,\n                            position: {\n                                x,\n                                y\n                            },\n                            currentHp: inst.currentHp || info.hp\n                        });\n                        occupiedCells.add(\"\".concat(x, \",\").concat(y));\n                        x++;\n                    });\n                });\n                finalBuildings = migrated;\n            }\n            setBuildings(finalBuildings);\n            const nodesToSet = (savedState.resourceNodes || []).map((n)=>({\n                    ...n,\n                    assignedVillagers: n.assignedVillagers || []\n                }));\n            if (nodesToSet.length === 0) {\n                setResourceNodes(generateResourceNodes(occupiedCells));\n            } else {\n                setResourceNodes(nodesToSet);\n            }\n            setCurrentAge(savedState.currentAge);\n            setGameLog(savedState.gameLog);\n            setActiveTasks(migratedTasks);\n            setInventory(savedState.inventory || []);\n            setActiveBuffs(savedState.activeBuffs || {\n                resourceBoost: []\n            });\n            setCurrentEvent(null);\n            setActivityStatus(\"Welcome back to your saga.\");\n            setGameState(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING);\n        } else {\n            addNotification('Could not find a saved game named \"'.concat(saveName, '\".'));\n        }\n    };\n    // Event Trigger Timer\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (gameState !== _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING) return;\n        if (!currentEvent) {\n            scheduleNextEvent();\n        } else if (eventTimerRef.current) {\n            clearTimeout(eventTimerRef.current);\n        }\n        return ()=>{\n            if (eventTimerRef.current) {\n                clearTimeout(eventTimerRef.current);\n            }\n        };\n    }, [\n        gameState,\n        currentEvent,\n        scheduleNextEvent\n    ]);\n    const handleEventChoice = (choice)=>{\n        if (choice.cost) {\n            const missingRes = [];\n            for(const key in choice.cost){\n                const resKey = key;\n                if (resources[resKey] < (choice.cost[resKey] || 0)) {\n                    missingRes.push(resKey);\n                }\n            }\n            if (missingRes.length > 0) {\n                addNotification(\"You lack the required resources: \".concat(missingRes.join(\", \"), \".\"));\n                return;\n            }\n            const negativeCost = {};\n            for(const key in choice.cost){\n                const resKey = key;\n                negativeCost[resKey] = -(choice.cost[resKey] || 0);\n            }\n            updateResources(negativeCost);\n        }\n        const isSuccess = choice.successChance === undefined || Math.random() < choice.successChance;\n        const effects = isSuccess ? choice.successEffects : choice.failureEffects;\n        if (!effects) {\n            setCurrentEvent(null);\n            scheduleNextEvent();\n            return;\n        }\n        let logMessage = 'Decision: \"'.concat(choice.text, '\". Outcome: ').concat(isSuccess ? \"Success\" : \"Failure\", \". \").concat(effects.log);\n        effects.rewards.forEach((reward)=>{\n            if (reward.type === \"resource\") {\n                let amount = 0;\n                if (Array.isArray(reward.amount)) {\n                    const [min, max] = reward.amount;\n                    amount = Math.floor(Math.random() * (max - min + 1)) + min;\n                } else {\n                    amount = reward.amount;\n                }\n                if (amount !== 0) {\n                    updateResources({\n                        [reward.resource]: amount\n                    });\n                    logMessage += \" You \".concat(amount > 0 ? \"gained\" : \"lost\", \" \").concat(Math.abs(amount), \" \").concat(reward.resource, \".\");\n                }\n            } else if (reward.type === \"item\") {\n                const itemInfo = _data_itemContent__WEBPACK_IMPORTED_MODULE_6__.GAME_ITEMS[reward.itemId];\n                if (itemInfo) {\n                    const newItems = [];\n                    for(let i = 0; i < reward.amount; i++){\n                        newItems.push({\n                            ...itemInfo,\n                            id: \"\".concat(reward.itemId, \"-\").concat(Date.now(), \"-\").concat(i)\n                        });\n                    }\n                    setInventory((prev)=>[\n                            ...prev,\n                            ...newItems\n                        ]);\n                    logMessage += \" You received \".concat(reward.amount, \"x \").concat(itemInfo.name, \"!\");\n                }\n            } else if (reward.type === \"unit\") {\n                if (reward.unitType === \"villager\") {\n                    const newVillagerNames = (0,_services_nameService__WEBPACK_IMPORTED_MODULE_5__.getRandomNames)(\"villager\", reward.amount);\n                    const newVillagers = newVillagerNames.map((name)=>({\n                            id: \"\".concat(Date.now(), \"-\").concat(name),\n                            name,\n                            currentTask: null\n                        }));\n                    setUnits((p)=>({\n                            ...p,\n                            villagers: [\n                                ...p.villagers,\n                                ...newVillagers\n                            ]\n                        }));\n                    logMessage += \" You gained \".concat(reward.amount, \" villager(s).\");\n                }\n            }\n        });\n        addToLog(logMessage, \"event\");\n        setActivityStatus(effects.log);\n        setCurrentEvent(null);\n        scheduleNextEvent();\n    };\n    const handleInitiateBuild = (villagerId, rect)=>{\n        if (isVillagerBusy(villagerId)) {\n            addNotification(\"This villager is already busy.\");\n            return;\n        }\n        setBuildPanelState({\n            isOpen: true,\n            villagerId,\n            anchorRect: rect\n        });\n        setUnitManagementPanel({\n            isOpen: false,\n            type: null,\n            anchorRect: null\n        });\n    };\n    const handleStartPlacement = (buildingId)=>{\n        const villagerId = buildPanelState.villagerId;\n        if (!villagerId) return;\n        const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === buildingId);\n        if (!buildingInfo) return;\n        const isAlreadyConstructing = activeTasks.some((t)=>{\n            var _t_payload;\n            return t.type === \"build\" && ((_t_payload = t.payload) === null || _t_payload === void 0 ? void 0 : _t_payload.buildingType) === buildingInfo.id;\n        });\n        if (buildingInfo.isUnique && (buildings[buildingInfo.id].length > 0 || isAlreadyConstructing)) {\n            addNotification(\"You can only build one \".concat(buildingInfo.name, \".\"));\n            return;\n        }\n        const cost = buildingInfo.cost;\n        if (!unlimitedResources) {\n            const missing = [];\n            for(const res in cost){\n                const resourceKey = res;\n                var _cost_resourceKey;\n                if (resources[resourceKey] < ((_cost_resourceKey = cost[resourceKey]) !== null && _cost_resourceKey !== void 0 ? _cost_resourceKey : 0)) {\n                    var _cost_resourceKey1;\n                    missing.push(\"\".concat(((_cost_resourceKey1 = cost[resourceKey]) !== null && _cost_resourceKey1 !== void 0 ? _cost_resourceKey1 : 0) - resources[resourceKey], \" \").concat(resourceKey));\n                }\n            }\n            if (missing.length > 0) {\n                addNotification(\"Need \".concat(missing.join(\" and \"), \".\"));\n                return;\n            }\n        }\n        setPlayerAction({\n            mode: \"build\",\n            buildingType: buildingId,\n            villagerId\n        });\n        setBuildPanelState({\n            isOpen: false,\n            villagerId: null,\n            anchorRect: null\n        });\n        setActivityStatus(\"Select a location to build a \".concat(buildingInfo.name, \". Right-click to cancel.\"));\n    };\n    const handleConfirmPlacement = (position)=>{\n        if ((playerAction === null || playerAction === void 0 ? void 0 : playerAction.mode) !== \"build\") return;\n        const { buildingType, villagerId } = playerAction;\n        const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === buildingType);\n        const builder = units.villagers.find((v)=>v.id === villagerId);\n        if (!buildingInfo || !builder) return;\n        if (!unlimitedResources) {\n            const cost = buildingInfo.cost;\n            const negativeCost = {};\n            for(const resource in cost){\n                negativeCost[resource] = -(cost[resource] || 0);\n            }\n            updateResources(negativeCost);\n        }\n        let buildTime = buildingInfo.buildTime * 1000;\n        if (activeBuffs.buildTimeReduction) {\n            buildTime *= 1 - activeBuffs.buildTimeReduction.percentage;\n            addToLog(\"A Builder's Charm reduced construction time by \".concat(activeBuffs.buildTimeReduction.percentage * 100, \"%!\"), \"item\");\n            setActiveBuffs((prev)=>{\n                const newUses = prev.buildTimeReduction.uses - 1;\n                return newUses > 0 ? {\n                    ...prev,\n                    buildTimeReduction: {\n                        ...prev.buildTimeReduction,\n                        uses: newUses\n                    }\n                } : {\n                    ...prev,\n                    buildTimeReduction: undefined\n                };\n            });\n        }\n        const taskId = \"\".concat(Date.now(), \"-build-\").concat(buildingType);\n        const taskPayload = {\n            buildingType,\n            villagerIds: [\n                villagerId\n            ],\n            position\n        };\n        if (unlimitedResources) {\n            handleTaskCompletion({\n                id: taskId,\n                type: \"build\",\n                startTime: 0,\n                duration: 0,\n                payload: {\n                    ...taskPayload,\n                    position\n                }\n            });\n        } else {\n            const newTask = {\n                id: taskId,\n                type: \"build\",\n                startTime: Date.now(),\n                duration: buildTime,\n                payload: taskPayload\n            };\n            setActiveTasks((prev)=>[\n                    ...prev,\n                    newTask\n                ]);\n            setUnits((prev)=>({\n                    ...prev,\n                    villagers: prev.villagers.map((v)=>v.id === villagerId ? {\n                            ...v,\n                            currentTask: taskId\n                        } : v)\n                }));\n            setActivityStatus(\"\".concat(builder.name, \" has started constructing a \").concat(buildingInfo.name, \".\"));\n            addToLog(\"\".concat(builder.name, \" began construction of a new \").concat(buildingInfo.name, \".\"), buildingType);\n        }\n        setPlayerAction(null);\n    };\n    const handleCancelPlayerAction = ()=>{\n        setPlayerAction(null);\n        setActivityStatus(\"Command cancelled.\");\n    };\n    const handleDemolishBuilding = (type, id)=>{\n        var _buildings_townCenter;\n        if (type === \"townCenter\") {\n            addNotification(\"The Town Center is the heart of your civilization and cannot be demolished.\");\n            return;\n        }\n        if (activeTasks.some((t)=>{\n            var _t_payload;\n            return ((_t_payload = t.payload) === null || _t_payload === void 0 ? void 0 : _t_payload.buildingId) === id;\n        })) {\n            addNotification(\"Cannot demolish a building with an active task.\");\n            return;\n        }\n        const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === type);\n        const buildingInstance = buildings[type].find((b)=>b.id === id);\n        if (!buildingInfo || !buildingInstance) return;\n        if (type === \"houses\" && population.current > (((_buildings_townCenter = buildings.townCenter) === null || _buildings_townCenter === void 0 ? void 0 : _buildings_townCenter.length) > 0 ? 20 : 0) + (buildings.houses.length - 1) * 5) {\n            addNotification(\"Cannot demolish this house, your people would be homeless.\");\n            return;\n        }\n        const refund = {};\n        let refundMessageParts = [];\n        for(const res in buildingInfo.cost){\n            const resourceKey = res;\n            const cost = buildingInfo.cost[resourceKey] || 0;\n            const amount = Math.floor(cost * 0.5);\n            if (amount > 0) {\n                refund[resourceKey] = amount;\n                refundMessageParts.push(\"\".concat(amount, \" \").concat(resourceKey));\n            }\n        }\n        updateResources(refund);\n        setBuildings((prev)=>({\n                ...prev,\n                [type]: prev[type].filter((b)=>b.id !== id)\n            }));\n        addToLog(\"\".concat(buildingInstance.name, \" (\").concat(buildingInfo.name, \") was demolished.\"), type);\n        if (refundMessageParts.length > 0) {\n            addNotification(\"Salvaged \".concat(refundMessageParts.join(\", \"), \".\"));\n        }\n        setBuildingManagementPanel({\n            isOpen: false,\n            type: null,\n            anchorRect: null\n        });\n    };\n    const handleUpdateBuilding = (type, id, name)=>{\n        setBuildings((prev)=>({\n                ...prev,\n                [type]: prev[type].map((b)=>b.id === id ? {\n                        ...b,\n                        name\n                    } : b)\n            }));\n        addNotification(\"Building renamed.\");\n    };\n    const handleTrainVillagers = (count)=>{\n        var _buildings_townCenter;\n        if (activeTasks.some((t)=>t.type === \"train_villager\") || count <= 0) return;\n        const villagerCost = 50;\n        const totalCost = villagerCost * count;\n        if (population.current + count > population.capacity) {\n            addNotification(\"Need space for \".concat(count, \" more villagers.\"));\n            return;\n        }\n        const townCenter = (_buildings_townCenter = buildings.townCenter) === null || _buildings_townCenter === void 0 ? void 0 : _buildings_townCenter[0];\n        if (!townCenter) {\n            addNotification(\"No Town Center to train villagers.\");\n            return;\n        }\n        if (!unlimitedResources) {\n            if (resources.food < totalCost) {\n                addNotification(\"Need \".concat(totalCost - resources.food, \" more Food.\"));\n                return;\n            }\n            updateResources({\n                food: -totalCost\n            });\n        }\n        const trainTime = 10000 * count;\n        if (unlimitedResources) {\n            handleTaskCompletion({\n                id: \"instant\",\n                type: \"train_villager\",\n                startTime: 0,\n                duration: 0,\n                payload: {\n                    count\n                }\n            });\n        } else {\n            const taskId = \"\".concat(Date.now(), \"-train-villager\");\n            const newTask = {\n                id: taskId,\n                type: \"train_villager\",\n                startTime: Date.now(),\n                duration: trainTime,\n                payload: {\n                    count,\n                    buildingId: townCenter.id\n                }\n            };\n            setActiveTasks((prev)=>[\n                    ...prev,\n                    newTask\n                ]);\n            setActivityStatus(\"Training \".concat(count, \" villager(s)...\"));\n            addToLog(\"Began training \".concat(count, \" new villager(s).\"), \"villager\");\n        }\n        setBuildingManagementPanel({\n            isOpen: false,\n            type: null,\n            anchorRect: null\n        });\n    };\n    const handleTrainUnits = (unitType, count)=>{\n        var _buildings_unitInfo_requiredBuilding;\n        const unitInfo = UNIT_INFO.find((u)=>u.id === unitType);\n        if (!unitInfo || activeTasks.some((t)=>{\n            var _t_payload;\n            return ((_t_payload = t.payload) === null || _t_payload === void 0 ? void 0 : _t_payload.unitType) === unitType;\n        }) || count <= 0) return;\n        if (population.current + count > population.capacity) {\n            addNotification(\"Need space for \".concat(count, \" more units.\"));\n            return;\n        }\n        const trainingBuilding = (_buildings_unitInfo_requiredBuilding = buildings[unitInfo.requiredBuilding]) === null || _buildings_unitInfo_requiredBuilding === void 0 ? void 0 : _buildings_unitInfo_requiredBuilding[0];\n        if (!trainingBuilding) {\n            addNotification(\"No \".concat(unitInfo.requiredBuilding, \" to train units.\"));\n            return;\n        }\n        if (!unlimitedResources) {\n            const totalCost = {};\n            const missing = [];\n            for(const res in unitInfo.cost){\n                const resourceKey = res;\n                const cost = (unitInfo.cost[resourceKey] || 0) * count;\n                totalCost[resourceKey] = -cost;\n                if (resources[resourceKey] < cost) missing.push(\"\".concat(cost - resources[resourceKey], \" \").concat(resourceKey));\n            }\n            if (missing.length > 0) {\n                addNotification(\"Need \".concat(missing.join(\" and \"), \".\"));\n                return;\n            }\n            updateResources(totalCost);\n        }\n        let trainTime = unitInfo.trainTime * 1000 * count;\n        const permanentBonus = activeBuffs.permanentTrainTimeReduction || 0;\n        let tempBonus = 0;\n        if (activeBuffs.trainTimeReduction) {\n            const applicableUses = Math.min(count, activeBuffs.trainTimeReduction.uses);\n            const remainingUses = activeBuffs.trainTimeReduction.uses - applicableUses;\n            tempBonus = activeBuffs.trainTimeReduction.percentage;\n            const timeForBuffedUnits = unitInfo.trainTime * 1000 * applicableUses * (1 - tempBonus);\n            const timeForNormalUnits = unitInfo.trainTime * 1000 * (count - applicableUses);\n            trainTime = timeForBuffedUnits + timeForNormalUnits;\n            if (remainingUses > 0) {\n                setActiveBuffs((prev)=>({\n                        ...prev,\n                        trainTimeReduction: {\n                            ...prev.trainTimeReduction,\n                            uses: remainingUses\n                        }\n                    }));\n            } else {\n                setActiveBuffs((prev)=>({\n                        ...prev,\n                        trainTimeReduction: undefined\n                    }));\n                addToLog(\"The Drillmaster's Whistle buff has been fully used.\", \"item\");\n            }\n        }\n        trainTime *= 1 - permanentBonus;\n        if (unlimitedResources) {\n            handleTaskCompletion({\n                id: \"instant\",\n                type: \"train_military\",\n                startTime: 0,\n                duration: 0,\n                payload: {\n                    unitType,\n                    count\n                }\n            });\n        } else {\n            const taskId = \"\".concat(Date.now(), \"-train-\").concat(unitType);\n            const newTask = {\n                id: taskId,\n                type: \"train_military\",\n                startTime: Date.now(),\n                duration: trainTime,\n                payload: {\n                    unitType,\n                    count,\n                    buildingId: trainingBuilding.id\n                }\n            };\n            setActiveTasks((prev)=>[\n                    ...prev,\n                    newTask\n                ]);\n            setActivityStatus(\"Training \".concat(count, \" \").concat(unitInfo.name, \"(s)...\"));\n            addToLog(\"Began training \".concat(count, \" new \").concat(unitInfo.name, \"(s).\"), unitType);\n        }\n        setBuildingManagementPanel({\n            isOpen: false,\n            type: null,\n            anchorRect: null\n        });\n    };\n    const handleDismissSpecificUnit = (type, id)=>{\n        if (type === \"villagers\" && isVillagerBusy(id)) {\n            addNotification(\"Cannot dismiss a busy villager.\");\n            return;\n        }\n        const unit = units[type].find((u)=>u.id === id);\n        if (!unit) return;\n        if (type === \"villagers\" && units.villagers.length <= 1) {\n            addNotification(\"Cannot dismiss your last villager.\");\n            return;\n        }\n        setUnits((prev)=>({\n                ...prev,\n                [type]: prev[type].filter((u)=>u.id !== id)\n            }));\n        const unitTypeName = type === \"villagers\" ? \"villager\" : unit.unitType;\n        addToLog(\"\".concat(unit.name, \" the \").concat(unitTypeName, \" has been dismissed.\"), type === \"villagers\" ? \"villager\" : unit.unitType);\n        addNotification(\"\".concat(unit.name, \" was dismissed.\"));\n    };\n    const handleUpdateUnit = (type, id, name, title)=>{\n        setUnits((prev)=>({\n                ...prev,\n                [type]: prev[type].map((u)=>{\n                    if (u.id === id) {\n                        const updatedUnit = {\n                            ...u,\n                            name\n                        };\n                        if (type === \"military\" && title !== undefined) {\n                            updatedUnit.title = title;\n                        }\n                        return updatedUnit;\n                    }\n                    return u;\n                })\n            }));\n        addNotification(\"Unit updated.\");\n    };\n    const handleAssignVillagersToNode = (nodeId, count)=>{\n        const idleVillagers = units.villagers.filter((v)=>!v.currentTask);\n        if (count <= 0) return;\n        let cappedCount = Math.min(count, idleVillagers.length);\n        if (cappedCount === 0) {\n            addNotification(\"No idle villagers available.\");\n            return;\n        }\n        const villagersToAssign = idleVillagers.slice(0, cappedCount);\n        const villagerIdsToAssign = villagersToAssign.map((v)=>v.id);\n        const targetNode = resourceNodes.find((n)=>n.id === nodeId);\n        if (!targetNode) return;\n        const taskId = \"gather-\".concat(nodeId);\n        const existingTask = activeTasks.find((t)=>t.id === taskId);\n        if (unlimitedResources) {\n            updateResources({\n                [targetNode.type]: targetNode.amount\n            });\n            addToLog(\"\".concat(cappedCount, \" villager(s) instantly gathered \").concat(Math.floor(targetNode.amount), \" \").concat(targetNode.type, \".\"), targetNode.type);\n            setResourceNodes((prev)=>prev.filter((n)=>n.id !== nodeId));\n        } else {\n            if (existingTask) {\n                setActiveTasks((prev)=>prev.map((t)=>t.id === taskId ? {\n                            ...t,\n                            payload: {\n                                ...t.payload,\n                                villagerIds: [\n                                    ...new Set([\n                                        ...t.payload.villagerIds,\n                                        ...villagerIdsToAssign\n                                    ])\n                                ]\n                            }\n                        } : t));\n            } else {\n                const newTask = {\n                    id: taskId,\n                    type: \"gather\",\n                    startTime: Date.now(),\n                    duration: 999999999,\n                    payload: {\n                        resourceNodeId: nodeId,\n                        villagerIds: villagerIdsToAssign\n                    }\n                }; // Duration is arbitrary\n                setActiveTasks((prev)=>[\n                        ...prev,\n                        newTask\n                    ]);\n            }\n            setUnits((prev)=>({\n                    ...prev,\n                    villagers: prev.villagers.map((v)=>villagerIdsToAssign.includes(v.id) ? {\n                            ...v,\n                            currentTask: taskId\n                        } : v)\n                }));\n        }\n        addToLog(\"\".concat(cappedCount, \" villager(s) assigned to gather \").concat(targetNode.type, \".\"), targetNode.type);\n        setActivityStatus(\"\".concat(cappedCount, \" villager(s) are now gathering \").concat(targetNode.type, \".\"));\n        setAssignmentPanelState({\n            isOpen: false,\n            targetId: null,\n            targetType: null,\n            anchorRect: null\n        });\n    };\n    const handleRecallVillagers = (targetId, count, type)=>{\n        if (type === \"resource\") {\n            const taskId = \"gather-\".concat(targetId);\n            const node = resourceNodes.find((n)=>n.id === targetId);\n            const assignedVillagers = units.villagers.filter((v)=>v.currentTask === taskId);\n            if (!node || assignedVillagers.length < count) return;\n            const villagersToRecall = assignedVillagers.slice(assignedVillagers.length - count).map((v)=>v.id);\n            setUnits((prev)=>({\n                    ...prev,\n                    villagers: prev.villagers.map((v)=>villagersToRecall.includes(v.id) ? {\n                            ...v,\n                            currentTask: null\n                        } : v)\n                }));\n            setActiveTasks((prev)=>{\n                const taskIndex = prev.findIndex((t)=>t.id === taskId);\n                if (taskIndex === -1) return prev;\n                const task = prev[taskIndex];\n                const remainingVillagers = task.payload.villagerIds.filter((id)=>!villagersToRecall.includes(id));\n                if (remainingVillagers.length === 0) {\n                    return prev.filter((_, i)=>i !== taskIndex);\n                } else {\n                    return prev.map((t, i)=>i === taskIndex ? {\n                            ...t,\n                            payload: {\n                                ...t.payload,\n                                villagerIds: remainingVillagers\n                            }\n                        } : t);\n                }\n            });\n            addToLog(\"\".concat(count, \" villager(s) recalled from gathering \").concat(node.type, \".\"), \"villager\");\n        } else {\n            var _task_payload_villagerIds, _task_payload;\n            const task = activeTasks.find((t)=>t.id === targetId);\n            var _task_payload_villagerIds_length;\n            if (!task || task.type !== \"build\" || ((_task_payload_villagerIds_length = (_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : (_task_payload_villagerIds = _task_payload.villagerIds) === null || _task_payload_villagerIds === void 0 ? void 0 : _task_payload_villagerIds.length) !== null && _task_payload_villagerIds_length !== void 0 ? _task_payload_villagerIds_length : 0) < count) return;\n            const villagersToRecall = task.payload.villagerIds.slice(task.payload.villagerIds.length - count);\n            const remainingVillagers = task.payload.villagerIds.filter((id)=>!villagersToRecall.includes(id));\n            if (remainingVillagers.length === 0) {\n                addNotification(\"Cannot recall the last builder. This would cancel the project.\");\n                return;\n            }\n            setUnits((prev)=>({\n                    ...prev,\n                    villagers: prev.villagers.map((v)=>villagersToRecall.includes(v.id) ? {\n                            ...v,\n                            currentTask: null\n                        } : v)\n                }));\n            const buildingInfo = BUILDINGS_INFO.find((b)=>b.id === task.payload.buildingType);\n            const totalWork = buildingInfo.buildTime * 1000;\n            const oldWorkerCount = task.payload.villagerIds.length;\n            const timeElapsed = Date.now() - task.startTime;\n            const workDone = timeElapsed * oldWorkerCount;\n            const workRemaining = Math.max(0, totalWork - workDone);\n            const newWorkerCount = remainingVillagers.length;\n            const newRemainingDuration = workRemaining / newWorkerCount;\n            setActiveTasks((prev)=>prev.map((t)=>t.id === targetId ? {\n                        ...t,\n                        startTime: Date.now(),\n                        duration: newRemainingDuration,\n                        payload: {\n                            ...t.payload,\n                            villagerIds: remainingVillagers\n                        }\n                    } : t));\n            addToLog(\"\".concat(count, \" villager(s) recalled from construction. Work will now proceed slower.\"), \"villager\");\n        }\n        setAssignmentPanelState({\n            isOpen: false,\n            targetId: null,\n            targetType: null,\n            anchorRect: null\n        });\n    };\n    const handleAssignVillagersToConstruction = (constructionId, count)=>{\n        var _task_payload_villagerIds, _task_payload;\n        const idleVillagers = units.villagers.filter((v)=>!v.currentTask);\n        if (count <= 0) return;\n        let cappedCount = Math.min(count, idleVillagers.length);\n        if (cappedCount === 0) {\n            addNotification(\"No idle villagers available to assist.\");\n            return;\n        }\n        const villagersToAssign = idleVillagers.slice(0, cappedCount);\n        const villagerIdsToAssign = villagersToAssign.map((v)=>v.id);\n        const task = activeTasks.find((t)=>t.id === constructionId);\n        if (!task || task.type !== \"build\") return;\n        const buildingInfo = BUILDINGS_INFO.find((b)=>{\n            var _task_payload;\n            return b.id === ((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : _task_payload.buildingType);\n        });\n        if (!buildingInfo) return;\n        const baseDuration = buildingInfo.buildTime * 1000;\n        const oldWorkerCount = ((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : (_task_payload_villagerIds = _task_payload.villagerIds) === null || _task_payload_villagerIds === void 0 ? void 0 : _task_payload_villagerIds.length) || 1;\n        const timeElapsed = Date.now() - task.startTime;\n        const workDone = timeElapsed * oldWorkerCount;\n        const totalWork = baseDuration;\n        const workRemaining = Math.max(0, totalWork - workDone);\n        const newWorkerCount = oldWorkerCount + cappedCount;\n        const newRemainingDuration = workRemaining / newWorkerCount;\n        const updatedVillagerIds = [\n            ...task.payload.villagerIds,\n            ...villagerIdsToAssign\n        ];\n        setUnits((prev)=>({\n                ...prev,\n                villagers: prev.villagers.map((v)=>villagerIdsToAssign.includes(v.id) ? {\n                        ...v,\n                        currentTask: constructionId\n                    } : v)\n            }));\n        setActiveTasks((prev)=>prev.map((t)=>t.id === constructionId ? {\n                    ...t,\n                    startTime: Date.now(),\n                    duration: newRemainingDuration,\n                    payload: {\n                        ...t.payload,\n                        villagerIds: updatedVillagerIds\n                    }\n                } : t));\n        addToLog(\"\".concat(cappedCount, \" villager(s) are now assisting with the \").concat(buildingInfo.name, \".\"), buildingInfo.id);\n        setActivityStatus(\"Construction of the \".concat(buildingInfo.name, \" is now faster.\"));\n        setAssignmentPanelState({\n            isOpen: false,\n            targetId: null,\n            targetType: null,\n            anchorRect: null\n        });\n    };\n    const handleAssignVillagers = (targetId, count)=>{\n        if (assignmentPanelState.targetType === \"resource\") {\n            handleAssignVillagersToNode(targetId, count);\n        } else if (assignmentPanelState.targetType === \"construction\") {\n            handleAssignVillagersToConstruction(targetId, count);\n        }\n    };\n    const handleAdvanceAge = async ()=>{\n        if (activeTasks.some((t)=>t.type === \"advance_age\")) {\n            addNotification(\"Advancement already in progress.\");\n            return;\n        }\n        if (!unlimitedResources) {\n            if (resources.food < 500 || resources.gold < 200) {\n                const missing = [];\n                if (resources.food < 500) missing.push(\"\".concat(500 - resources.food, \" Food\"));\n                if (resources.gold < 200) missing.push(\"\".concat(200 - resources.gold, \" Gold\"));\n                addNotification(\"To advance, you need \".concat(missing.join(\" and \"), \".\"));\n                return;\n            }\n            updateResources({\n                food: -500,\n                gold: -200\n            });\n        }\n        const currentIndex = ageProgressionList.findIndex((age)=>age.name === currentAge);\n        if (currentIndex === -1 || currentIndex + 1 >= ageProgressionList.length) {\n            addNotification(\"You have reached the final available age.\");\n            return;\n        }\n        const duration = 60000;\n        if (unlimitedResources) {\n            handleTaskCompletion({\n                id: \"instant\",\n                type: \"advance_age\",\n                startTime: 0,\n                duration: 0,\n                payload: {}\n            });\n        } else {\n            const taskId = \"\".concat(Date.now(), \"-advance_age\");\n            const newTask = {\n                id: taskId,\n                type: \"advance_age\",\n                startTime: Date.now(),\n                duration\n            };\n            setActiveTasks((prev)=>[\n                    ...prev,\n                    newTask\n                ]);\n            setActivityStatus(\"Your people begin the long journey to a new age.\");\n            setBuildingManagementPanel({\n                isOpen: false,\n                type: null,\n                anchorRect: null\n            });\n        }\n    };\n    const handleExitGame = async ()=>{\n        setCurrentSaveName(null);\n        await fetchSavesAndAges();\n        setGameState(_types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.MENU);\n    };\n    const handleDeleteGame = async (saveName)=>{\n        await (0,_services_dbService__WEBPACK_IMPORTED_MODULE_4__.deleteGameState)(saveName);\n        await fetchSavesAndAges();\n        addNotification('Deleted saga: \"'.concat(saveName, '\"'));\n    };\n    const handleToggleUnlimitedResources = ()=>{\n        const newMode = !unlimitedResources;\n        setUnlimitedResources(newMode);\n        if (newMode) {\n            setResources({\n                food: 99999,\n                wood: 99999,\n                gold: 99999,\n                stone: 99999\n            });\n            addNotification(\"Test Mode: ON - All active tasks completed.\");\n            const depletedNodeIds = new Set();\n            const tasksToComplete = [\n                ...activeTasks\n            ];\n            setActiveTasks([]);\n            tasksToComplete.forEach((task)=>{\n                if (task.type === \"gather\") {\n                    var _task_payload;\n                    if ((_task_payload = task.payload) === null || _task_payload === void 0 ? void 0 : _task_payload.resourceNodeId) {\n                        depletedNodeIds.add(task.payload.resourceNodeId);\n                        const node = resourceNodes.find((n)=>n.id === task.payload.resourceNodeId);\n                        if (node) {\n                            addToLog(\"Instantly gathered all \".concat(node.type, \" from a depleted source.\"), node.type);\n                        }\n                    }\n                }\n                handleTaskCompletion(task);\n            });\n            if (depletedNodeIds.size > 0) {\n                setResourceNodes((prev)=>prev.filter((n)=>!depletedNodeIds.has(n.id)));\n            }\n        } else {\n            addNotification(\"Test Mode: OFF\");\n        }\n    };\n    const handleUseItem = (itemId)=>{\n        const item = inventory.find((i)=>i.id === itemId);\n        if (!item) return;\n        const baseItemId = item.id.split(\"-\")[0];\n        switch(baseItemId){\n            case \"scroll_of_haste\":\n            case \"blueprint_of_the_master\":\n                {\n                    const constructionTasks = activeTasks.filter((t)=>t.type === \"build\");\n                    if (constructionTasks.length > 0) {\n                        var _BUILDINGS_INFO_find;\n                        const taskToBoost = constructionTasks.sort((a, b)=>b.startTime + b.duration - (a.startTime + a.duration))[0];\n                        const timeReduction = baseItemId === \"scroll_of_haste\" ? 15000 : 60000;\n                        setActiveTasks((prev)=>prev.map((t)=>t.id === taskToBoost.id ? {\n                                    ...t,\n                                    duration: Math.max(0, t.duration - timeReduction)\n                                } : t));\n                        addToLog(\"Used \".concat(item.name, \" to speed up construction of the \").concat((_BUILDINGS_INFO_find = BUILDINGS_INFO.find((b)=>{\n                            var _taskToBoost_payload;\n                            return b.id === ((_taskToBoost_payload = taskToBoost.payload) === null || _taskToBoost_payload === void 0 ? void 0 : _taskToBoost_payload.buildingType);\n                        })) === null || _BUILDINGS_INFO_find === void 0 ? void 0 : _BUILDINGS_INFO_find.name, \".\"), \"item\");\n                    }\n                    break;\n                }\n            case \"hearty_meal\":\n                {\n                    updateResources({\n                        food: 75\n                    });\n                    addToLog(\"Used \".concat(item.name, \" to gain 75 food.\"), \"item\");\n                    break;\n                }\n            case \"builders_charm\":\n                {\n                    setActiveBuffs((prev)=>({\n                            ...prev,\n                            buildTimeReduction: {\n                                percentage: 0.1,\n                                uses: 1\n                            }\n                        }));\n                    addToLog(\"Used \".concat(item.name, \". The next building will be constructed 10% faster.\"), \"item\");\n                    break;\n                }\n            case \"drillmasters_whistle\":\n                {\n                    setActiveBuffs((prev)=>({\n                            ...prev,\n                            trainTimeReduction: {\n                                percentage: 0.25,\n                                uses: 5\n                            }\n                        }));\n                    addToLog(\"Used \".concat(item.name, \". The next 5 military units will train 25% faster.\"), \"item\");\n                    break;\n                }\n            case \"golden_harvest\":\n                {\n                    setActiveBuffs((prev)=>({\n                            ...prev,\n                            resourceBoost: [\n                                ...prev.resourceBoost || [],\n                                {\n                                    resource: \"food\",\n                                    multiplier: 1.5,\n                                    endTime: Date.now() + 60000\n                                }\n                            ]\n                        }));\n                    addToLog(\"Used \".concat(item.name, \". Food gathering is boosted by 50% for 60 seconds.\"), \"item\");\n                    break;\n                }\n            case \"shard_of_the_ancients\":\n                {\n                    const constructionTasks = activeTasks.filter((t)=>t.type === \"build\");\n                    if (constructionTasks.length > 0) {\n                        var _BUILDINGS_INFO_find1;\n                        const taskToComplete = constructionTasks.sort((a, b)=>b.startTime + b.duration - (a.startTime + a.duration))[0];\n                        setActiveTasks((prev)=>prev.filter((t)=>t.id !== taskToComplete.id));\n                        handleTaskCompletion(taskToComplete);\n                        addToLog(\"Used \".concat(item.name, \" to instantly complete the \").concat((_BUILDINGS_INFO_find1 = BUILDINGS_INFO.find((b)=>{\n                            var _taskToComplete_payload;\n                            return b.id === ((_taskToComplete_payload = taskToComplete.payload) === null || _taskToComplete_payload === void 0 ? void 0 : _taskToComplete_payload.buildingType);\n                        })) === null || _BUILDINGS_INFO_find1 === void 0 ? void 0 : _BUILDINGS_INFO_find1.name, \".\"), \"item\");\n                    }\n                    break;\n                }\n            case \"heart_of_the_mountain\":\n                {\n                    const now = Date.now();\n                    setActiveBuffs((prev)=>({\n                            ...prev,\n                            resourceBoost: [\n                                ...prev.resourceBoost || [],\n                                {\n                                    resource: \"gold\",\n                                    multiplier: 2,\n                                    endTime: now + 120000\n                                },\n                                {\n                                    resource: \"stone\",\n                                    multiplier: 2,\n                                    endTime: now + 120000\n                                }\n                            ]\n                        }));\n                    addToLog(\"Used \".concat(item.name, \". Gold and Stone gathering are doubled for 2 minutes.\"), \"item\");\n                    break;\n                }\n            case \"banner_of_command\":\n                {\n                    // Since there is no combat, we'll make this a permanent training speed boost\n                    const currentBonus = activeBuffs.permanentTrainTimeReduction || 0;\n                    setActiveBuffs((prev)=>({\n                            ...prev,\n                            permanentTrainTimeReduction: currentBonus + 0.05\n                        }));\n                    addToLog(\"Used \".concat(item.name, \". All military units will now train 5% faster, permanently.\"), \"item\");\n                    break;\n                }\n            case \"whisper_of_the_creator\":\n                {\n                    const tasksToComplete = [\n                        ...activeTasks\n                    ];\n                    setActiveTasks([]);\n                    tasksToComplete.forEach(handleTaskCompletion);\n                    addToLog(\"A divine whisper echoes through your civilization, and all work is instantly finished.\", \"item\");\n                    break;\n                }\n        }\n        setInventory((prev)=>prev.filter((i)=>i.id !== itemId));\n        setInventoryPanelState({\n            isOpen: false,\n            anchorRect: null\n        });\n    };\n    const buildingCounts = Object.keys(buildings).reduce((acc, key)=>{\n        const buildingType = key;\n        acc[buildingType] = buildings[buildingType].length;\n        return acc;\n    }, {});\n    const idleVillagerCount = units.villagers.filter((v)=>!v.currentTask).length;\n    const assignmentTarget = assignmentPanelState.targetType === \"resource\" ? resourceNodes.find((n)=>n.id === assignmentPanelState.targetId) : activeTasks.find((t)=>t.type === \"build\" && t.id === assignmentPanelState.targetId);\n    const closeAllPanels = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setUnitManagementPanel((p)=>p.isOpen ? {\n                isOpen: false,\n                type: null,\n                anchorRect: null\n            } : p);\n        setBuildingManagementPanel((p)=>p.isOpen ? {\n                isOpen: false,\n                type: null,\n                instanceId: undefined,\n                anchorRect: null\n            } : p);\n        setBuildPanelState((p)=>p.isOpen ? {\n                isOpen: false,\n                villagerId: null,\n                anchorRect: null\n            } : p);\n        setAssignmentPanelState((p)=>p.isOpen ? {\n                isOpen: false,\n                targetId: null,\n                targetType: null,\n                anchorRect: null\n            } : p);\n        setCivPanelState((p)=>p.isOpen ? {\n                isOpen: false,\n                anchorRect: null\n            } : p);\n        setAllBuildingsPanel((p)=>p.isOpen ? {\n                isOpen: false,\n                anchorRect: null\n            } : p);\n        setInventoryPanelState((p)=>p.isOpen ? {\n                isOpen: false,\n                anchorRect: null\n            } : p);\n    }, []);\n    const handleOpenBuildingPanel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((type, instanceId, rect)=>{\n        closeAllPanels();\n        setBuildingManagementPanel({\n            isOpen: true,\n            type,\n            instanceId,\n            anchorRect: rect\n        });\n    }, [\n        closeAllPanels\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleClickOutside = (event)=>{\n            const isAnyPanelOpen = unitManagementPanel.isOpen || buildingManagementPanel.isOpen || buildPanelState.isOpen || assignmentPanelState.isOpen || civPanelState.isOpen || allBuildingsPanel.isOpen || inventoryPanelState.isOpen;\n            if (!isAnyPanelOpen) {\n                return;\n            }\n            const target = event.target;\n            if (target.closest(\".sci-fi-panel-popup\")) {\n                return;\n            }\n            closeAllPanels();\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>{\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [\n        unitManagementPanel.isOpen,\n        buildingManagementPanel.isOpen,\n        buildPanelState.isOpen,\n        assignmentPanelState.isOpen,\n        civPanelState.isOpen,\n        allBuildingsPanel.isOpen,\n        inventoryPanelState.isOpen,\n        closeAllPanels\n    ]);\n    const renderContent = ()=>{\n        switch(gameState){\n            case _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.MENU:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_StartScreen__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    onNewGame: handleStartNewGame,\n                    onResumeGame: handleResumeGame,\n                    savedGames: allSaves,\n                    onDeleteGame: handleDeleteGame\n                }, void 0, false, {\n                    fileName: \"/home/user/studio/src/app/page.tsx\",\n                    lineNumber: 1243,\n                    columnNumber: 24\n                }, undefined);\n            case _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.LOADING:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LoadingScreen__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/user/studio/src/app/page.tsx\",\n                    lineNumber: 1245,\n                    columnNumber: 24\n                }, undefined);\n            case _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING:\n                if (!civilization) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LoadingScreen__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/user/studio/src/app/page.tsx\",\n                    lineNumber: 1247,\n                    columnNumber: 43\n                }, undefined);\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GameUI__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            civilization: civilization,\n                            resources: resources,\n                            units: units,\n                            buildings: buildings,\n                            population: population,\n                            currentAge: currentAge,\n                            gameLog: gameLog,\n                            resourceDeltas: resourceDeltas,\n                            activityStatus: activityStatus,\n                            unitList: UNIT_INFO,\n                            buildingList: BUILDINGS_INFO,\n                            onOpenUnitPanel: (type, rect)=>{\n                                closeAllPanels();\n                                setUnitManagementPanel({\n                                    isOpen: true,\n                                    type,\n                                    anchorRect: rect\n                                });\n                            },\n                            onOpenBuildingPanel: handleOpenBuildingPanel,\n                            onOpenAllBuildingsPanel: (rect)=>{\n                                closeAllPanels();\n                                setAllBuildingsPanel({\n                                    isOpen: true,\n                                    anchorRect: rect\n                                });\n                            },\n                            playerAction: playerAction,\n                            onConfirmPlacement: handleConfirmPlacement,\n                            onCancelPlayerAction: handleCancelPlayerAction,\n                            onBuildingClick: (building, rect)=>{\n                                closeAllPanels();\n                                const type = Object.keys(buildings).find((key)=>buildings[key].some((b)=>b.id === building.id));\n                                if (type) setBuildingManagementPanel({\n                                    isOpen: true,\n                                    type,\n                                    instanceId: building.id,\n                                    anchorRect: rect\n                                });\n                            },\n                            mapDimensions: MAP_DIMENSIONS,\n                            activeTasks: activeTasks,\n                            onExitGame: handleExitGame,\n                            onOpenCivPanel: (rect)=>{\n                                closeAllPanels();\n                                setCivPanelState({\n                                    isOpen: true,\n                                    anchorRect: rect\n                                });\n                            },\n                            resourceNodes: resourceNodes,\n                            onOpenAssignmentPanel: (nodeId, rect)=>{\n                                closeAllPanels();\n                                setAssignmentPanelState({\n                                    isOpen: true,\n                                    targetId: nodeId,\n                                    targetType: \"resource\",\n                                    anchorRect: rect\n                                });\n                            },\n                            onOpenConstructionPanel: (constructionId, rect)=>{\n                                closeAllPanels();\n                                setAssignmentPanelState({\n                                    isOpen: true,\n                                    targetId: constructionId,\n                                    targetType: \"construction\",\n                                    anchorRect: rect\n                                });\n                            },\n                            gatherInfo: GATHER_INFO,\n                            currentEvent: currentEvent,\n                            onEventChoice: handleEventChoice,\n                            inventory: inventory,\n                            onOpenInventoryPanel: (rect)=>{\n                                closeAllPanels();\n                                setInventoryPanelState({\n                                    isOpen: true,\n                                    anchorRect: rect\n                                });\n                            }\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1250,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BuildPanel__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                            isOpen: buildPanelState.isOpen,\n                            onClose: ()=>setBuildPanelState({\n                                    isOpen: false,\n                                    villagerId: null,\n                                    anchorRect: null\n                                }),\n                            onStartPlacement: handleStartPlacement,\n                            resources: resources,\n                            buildingCounts: buildingCounts,\n                            buildingList: BUILDINGS_INFO,\n                            anchorRect: buildPanelState.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1286,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UnitManagementPanel__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            isOpen: unitManagementPanel.isOpen,\n                            onClose: ()=>setUnitManagementPanel({\n                                    isOpen: false,\n                                    type: null,\n                                    anchorRect: null\n                                }),\n                            type: unitManagementPanel.type,\n                            units: units,\n                            onUpdateUnit: handleUpdateUnit,\n                            onDismissUnit: handleDismissSpecificUnit,\n                            onInitiateBuild: (villagerId, rect)=>{\n                                closeAllPanels();\n                                handleInitiateBuild(villagerId, rect);\n                            },\n                            getVillagerTaskDetails: getVillagerTaskDetails,\n                            anchorRect: unitManagementPanel.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1295,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BuildingManagementPanel__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                            isOpen: buildingManagementPanel.isOpen,\n                            onClose: ()=>setBuildingManagementPanel({\n                                    isOpen: false,\n                                    type: null,\n                                    anchorRect: null\n                                }),\n                            panelState: buildingManagementPanel,\n                            buildings: buildings,\n                            buildingList: BUILDINGS_INFO,\n                            onUpdateBuilding: handleUpdateBuilding,\n                            onDemolishBuilding: handleDemolishBuilding,\n                            onTrainUnits: handleTrainUnits,\n                            onTrainVillagers: handleTrainVillagers,\n                            resources: resources,\n                            population: population,\n                            unitList: UNIT_INFO,\n                            onAdvanceAge: handleAdvanceAge,\n                            activeTasks: activeTasks,\n                            anchorRect: buildingManagementPanel.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1306,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ResourceAssignmentPanel__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                            isOpen: assignmentPanelState.isOpen,\n                            onClose: ()=>setAssignmentPanelState({\n                                    isOpen: false,\n                                    targetId: null,\n                                    targetType: null,\n                                    anchorRect: null\n                                }),\n                            assignmentTarget: assignmentTarget || null,\n                            idleVillagerCount: idleVillagerCount,\n                            onAssignVillagers: handleAssignVillagers,\n                            onRecallVillagers: handleRecallVillagers,\n                            gatherInfo: GATHER_INFO,\n                            buildingList: BUILDINGS_INFO,\n                            units: units,\n                            anchorRect: assignmentPanelState.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1323,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CivilizationPanel__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                            isOpen: civPanelState.isOpen,\n                            onClose: ()=>setCivPanelState({\n                                    isOpen: false,\n                                    anchorRect: null\n                                }),\n                            civilization: civilization,\n                            anchorRect: civPanelState.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1335,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AllBuildingsPanel__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                            isOpen: allBuildingsPanel.isOpen,\n                            onClose: ()=>setAllBuildingsPanel({\n                                    isOpen: false,\n                                    anchorRect: null\n                                }),\n                            buildingList: BUILDINGS_INFO,\n                            buildingCounts: buildingCounts,\n                            activeTasks: activeTasks,\n                            onOpenBuildingPanel: handleOpenBuildingPanel,\n                            anchorRect: allBuildingsPanel.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1341,\n                            columnNumber: 25\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_InventoryPanel__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                            isOpen: inventoryPanelState.isOpen,\n                            onClose: ()=>setInventoryPanelState({\n                                    isOpen: false,\n                                    anchorRect: null\n                                }),\n                            inventory: inventory,\n                            onUseItem: handleUseItem,\n                            activeTasks: activeTasks,\n                            activeBuffs: activeBuffs,\n                            anchorRect: inventoryPanelState.anchorRect\n                        }, void 0, false, {\n                            fileName: \"/home/user/studio/src/app/page.tsx\",\n                            lineNumber: 1350,\n                            columnNumber: 25\n                        }, undefined)\n                    ]\n                }, void 0, true);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_StartScreen__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    onNewGame: handleStartNewGame,\n                    onResumeGame: handleResumeGame,\n                    savedGames: allSaves,\n                    onDeleteGame: handleDeleteGame\n                }, void 0, false, {\n                    fileName: \"/home/user/studio/src/app/page.tsx\",\n                    lineNumber: 1362,\n                    columnNumber: 24\n                }, undefined);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-stone-dark flex items-center justify-center p-4\",\n        children: [\n            gameState === _types__WEBPACK_IMPORTED_MODULE_2__.GameStatus.PLAYING && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleToggleUnlimitedResources,\n                className: \"fixed bottom-4 left-4 z-[101] bg-brand-gold text-stone-dark font-bold py-1 px-3 rounded-full text-xs shadow-lg hover:scale-105 transition-transform\",\n                \"aria-label\": \"Toggle unlimited resources test mode\",\n                children: [\n                    \"Test Mode: \",\n                    unlimitedResources ? \"ON\" : \"OFF\"\n                ]\n            }, void 0, true, {\n                fileName: \"/home/user/studio/src/app/page.tsx\",\n                lineNumber: 1369,\n                columnNumber: 18\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_NotificationManager__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                notifications: notifications,\n                onRemoveNotification: removeNotification\n            }, void 0, false, {\n                fileName: \"/home/user/studio/src/app/page.tsx\",\n                lineNumber: 1377,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"w-full max-w-7xl mx-auto\",\n                children: renderContent()\n            }, void 0, false, {\n                fileName: \"/home/user/studio/src/app/page.tsx\",\n                lineNumber: 1378,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/user/studio/src/app/page.tsx\",\n        lineNumber: 1367,\n        columnNumber: 9\n    }, undefined);\n};\n_s(GamePage, \"8i6QdvOF21z7RbeO4UHxdV192VY=\");\n_c = GamePage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GamePage);\nvar _c;\n$RefreshReg$(_c, \"GamePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./types.ts":
/*!******************!*\
  !*** ./types.ts ***!
  \******************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameStatus: function() { return /* binding */ GameStatus; }\n/* harmony export */ });\nvar GameStatus;\n(function(GameStatus) {\n    GameStatus[GameStatus[\"MENU\"] = 0] = \"MENU\";\n    GameStatus[GameStatus[\"LOADING\"] = 1] = \"LOADING\";\n    GameStatus[GameStatus[\"PLAYING\"] = 2] = \"PLAYING\";\n    GameStatus[GameStatus[\"GAME_OVER\"] = 3] = \"GAME_OVER\";\n})(GameStatus || (GameStatus = {}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3R5cGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O1VBRVlBOzs7OztHQUFBQSxlQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi90eXBlcy50cz81NjUyIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgZW51bSBHYW1lU3RhdHVzIHtcbiAgICBNRU5VLFxuICAgIExPQURJTkcsXG4gICAgUExBWUlORyxcbiAgICBHQU1FX09WRVIsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2l2aWxpemF0aW9uIHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgbG9yZTogc3RyaW5nO1xuICAgIGJvbnVzOiBzdHJpbmc7XG4gICAgdW5pcXVlVW5pdDoge1xuICAgICAgICBuYW1lOnN0cmluZztcbiAgICAgICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICB9O1xuICAgIGJhbm5lclVybDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlcyB7XG4gICAgZm9vZDogbnVtYmVyO1xuICAgIHdvb2Q6IG51bWJlcjtcbiAgICBnb2xkOiBudW1iZXI7XG4gICAgc3RvbmU6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgUmVzb3VyY2VEZWx0YXMgPSBQYXJ0aWFsPFJlc291cmNlcz47XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmlsbGFnZXIge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGN1cnJlbnRUYXNrOiBzdHJpbmcgfCBudWxsOyAvLyBudWxsIGlmIGlkbGUsIG90aGVyd2lzZSB0aGUgSUQgb2YgdGhlIEdhbWVUYXNrXG59XG5cbmV4cG9ydCB0eXBlIE1pbGl0YXJ5VW5pdFR5cGUgPSAnc3dvcmRzbWFuJyB8ICdhcmNoZXInIHwgJ2tuaWdodCcgfCAnY2F0YXB1bHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1pbGl0YXJ5VW5pdCB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICB1bml0VHlwZTogTWlsaXRhcnlVbml0VHlwZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVbml0cyB7XG4gICAgdmlsbGFnZXJzOiBWaWxsYWdlcltdO1xuICAgIG1pbGl0YXJ5OiBNaWxpdGFyeVVuaXRbXTtcbn1cblxuZXhwb3J0IHR5cGUgQnVpbGRpbmdUeXBlID0gJ2hvdXNlcycgfCAnYmFycmFja3MnIHwgJ2FyY2hlcnlSYW5nZScgfCAnc3RhYmxlJyB8ICdzaWVnZVdvcmtzaG9wJyB8ICdibGFja3NtaXRoJyB8ICd3YXRjaFRvd2VyJyB8ICd0b3duQ2VudGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBCdWlsZGluZ0luc3RhbmNlIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwb3NpdGlvbjogeyB4OiBudW1iZXI7IHk6IG51bWJlcjsgfTtcbiAgICBjdXJyZW50SHA6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCdWlsZGluZ3Mge1xuICAgIGhvdXNlczogQnVpbGRpbmdJbnN0YW5jZVtdO1xuICAgIGJhcnJhY2tzOiBCdWlsZGluZ0luc3RhbmNlW107XG4gICAgYXJjaGVyeVJhbmdlOiBCdWlsZGluZ0luc3RhbmNlW107XG4gICAgc3RhYmxlOiBCdWlsZGluZ0luc3RhbmNlW107XG4gICAgc2llZ2VXb3Jrc2hvcDogQnVpbGRpbmdJbnN0YW5jZVtdO1xuICAgIGJsYWNrc21pdGg6IEJ1aWxkaW5nSW5zdGFuY2VbXTtcbiAgICB3YXRjaFRvd2VyOiBCdWlsZGluZ0luc3RhbmNlW107XG4gICAgdG93bkNlbnRlcjogQnVpbGRpbmdJbnN0YW5jZVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdhbWVTdGF0ZVBheWxvYWQge1xuICAgIGNpdjogQ2l2aWxpemF0aW9uO1xuICAgIGFnZTogc3RyaW5nO1xuICAgIHJlczogUmVzb3VyY2VzO1xuICAgIHVuaXRzOiB7XG4gICAgICAgIHZpbGxhZ2VyczogbnVtYmVyO1xuICAgICAgICBzd29yZHNtZW46IG51bWJlcjtcbiAgICAgICAgYXJjaGVyczogbnVtYmVyO1xuICAgICAgICBrbmlnaHRzOiBudW1iZXI7XG4gICAgICAgIGNhdGFwdWx0czogbnVtYmVyO1xuICAgIH07XG4gICAgYnVpbGRpbmdzOiB7IFtrZXkgaW4gQnVpbGRpbmdUeXBlXT86IG51bWJlciB9O1xufVxuXG5leHBvcnQgdHlwZSBCdWlsZGluZ0Nvc3RzID0geyBba2V5IGluIGtleW9mIFJlc291cmNlc10/OiBudW1iZXIgfTtcblxuZXhwb3J0IHR5cGUgSXRlbVJhcml0eSA9ICdDb21tb24nIHwgJ0VwaWMnIHwgJ0xlZ2VuZGFyeScgfCAnU3Bpcml0dWFsJztcblxuZXhwb3J0IGludGVyZmFjZSBHYW1lSXRlbSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICByYXJpdHk6IEl0ZW1SYXJpdHk7XG59XG5cbmV4cG9ydCB0eXBlIFJld2FyZCA9IFxuICAgIHsgdHlwZTogJ3Jlc291cmNlJywgcmVzb3VyY2U6IGtleW9mIFJlc291cmNlcywgYW1vdW50OiBudW1iZXIgfCBbbnVtYmVyLCBudW1iZXJdIH0gfFxuICAgIHsgdHlwZTogJ2l0ZW0nLCBpdGVtSWQ6IHN0cmluZywgYW1vdW50OiBudW1iZXIgfSB8XG4gICAgeyB0eXBlOiAndW5pdCcsIHVuaXRUeXBlOiAndmlsbGFnZXInLCBhbW91bnQ6IG51bWJlciB9O1xuXG5leHBvcnQgaW50ZXJmYWNlIEdhbWVFdmVudENob2ljZSB7XG4gICAgdGV4dDogc3RyaW5nO1xuICAgIGNvc3Q/OiBCdWlsZGluZ0Nvc3RzO1xuICAgIHN1Y2Nlc3NDaGFuY2U/OiBudW1iZXI7IC8vIDAtMSwgdW5kZWZpbmVkIG1lYW5zIDEwMCVcbiAgICBzdWNjZXNzRWZmZWN0czogeyByZXdhcmRzOiBSZXdhcmRbXSwgbG9nOiBzdHJpbmcgfTtcbiAgICBmYWlsdXJlRWZmZWN0cz86IHsgcmV3YXJkczogUmV3YXJkW10sIGxvZzogc3RyaW5nIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2FtZUV2ZW50IHtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgY2hvaWNlczogR2FtZUV2ZW50Q2hvaWNlW107XG59XG5cbmV4cG9ydCB0eXBlIExvZ0ljb25UeXBlID0ga2V5b2YgUmVzb3VyY2VzIHwgJ3ZpbGxhZ2VyJyB8IE1pbGl0YXJ5VW5pdFR5cGUgfCAnYWdlJyB8ICdldmVudCcgfCAnc3lzdGVtJyB8IEJ1aWxkaW5nVHlwZSB8ICdpdGVtJztcblxuZXhwb3J0IGludGVyZmFjZSBHYW1lTG9nRW50cnkge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGljb246IExvZ0ljb25UeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJ1aWxkaW5nSW5mbyB7XG4gICAgaWQ6IEJ1aWxkaW5nVHlwZTtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICBjb3N0OiBCdWlsZGluZ0Nvc3RzO1xuICAgIGlzVW5pcXVlOiBib29sZWFuO1xuICAgIGJ1aWxkVGltZTogbnVtYmVyOyAvLyBpbiBzZWNvbmRzXG4gICAgaHA6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVbml0SW5mbyB7XG4gICAgaWQ6IE1pbGl0YXJ5VW5pdFR5cGU7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgY29zdDogQnVpbGRpbmdDb3N0cztcbiAgICByZXF1aXJlZEJ1aWxkaW5nOiBCdWlsZGluZ1R5cGU7XG4gICAgdHJhaW5UaW1lOiBudW1iZXI7IC8vIGluIHNlY29uZHMgcGVyIHVuaXRcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVSU5vdGlmaWNhdGlvbiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIFJlc291cmNlTm9kZVR5cGUgPSAnZm9vZCcgfCAnd29vZCcgfCAnZ29sZCcgfCAnc3RvbmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlTm9kZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6IFJlc291cmNlTm9kZVR5cGU7XG4gIHBvc2l0aW9uOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyOyB9O1xuICBhbW91bnQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgVGFza1R5cGUgPSAnZ2F0aGVyJyB8ICdidWlsZCcgfCAndHJhaW5fdmlsbGFnZXInIHwgJ3RyYWluX21pbGl0YXJ5JyB8ICdhZHZhbmNlX2FnZSc7XG5cbmV4cG9ydCB0eXBlIFBsYXllckFjdGlvblN0YXRlID0ge1xuICAgIG1vZGU6ICdidWlsZCc7XG4gICAgYnVpbGRpbmdUeXBlOiBCdWlsZGluZ1R5cGU7XG4gICAgdmlsbGFnZXJJZDogc3RyaW5nO1xufSB8IG51bGw7XG5cblxuZXhwb3J0IGludGVyZmFjZSBHYW1lVGFzayB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB0eXBlOiBUYXNrVHlwZTtcbiAgICBzdGFydFRpbWU6IG51bWJlcjtcbiAgICBkdXJhdGlvbjogbnVtYmVyOyAvLyBpbiBtaWxsaXNlY29uZHNcbiAgICBwYXlsb2FkPzoge1xuICAgICAgICAvLyBTaGFyZWRcbiAgICAgICAgYnVpbGRpbmdJZD86IHN0cmluZzsgLy8gSUQgb2YgdGhlIGJ1aWxkaW5nIHBlcmZvcm1pbmcgdGhlIGFjdGlvbiAoZS5nLiBUQyBmb3IgdHJhaW5pbmcpXG4gICAgICAgIHZpbGxhZ2VySWRzPzogc3RyaW5nW107XG4gICAgICAgIGNvdW50PzogbnVtYmVyO1xuICAgICAgICBcbiAgICAgICAgLy8gQnVpbGQgdGFza1xuICAgICAgICBidWlsZGluZ1R5cGU/OiBCdWlsZGluZ1R5cGU7XG4gICAgICAgIHBvc2l0aW9uPzogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xuICAgICAgICBcbiAgICAgICAgLy8gVHJhaW4gbWlsaXRhcnkgdGFza1xuICAgICAgICB1bml0VHlwZT86IE1pbGl0YXJ5VW5pdFR5cGU7XG4gICAgICAgIFxuICAgICAgICAvLyBHYXRoZXIgdGFza1xuICAgICAgICByZXNvdXJjZU5vZGVJZD86IHN0cmluZztcbiAgICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2ZUJ1ZmZzIHtcbiAgICBidWlsZFRpbWVSZWR1Y3Rpb24/OiB7IHBlcmNlbnRhZ2U6IG51bWJlcjsgdXNlczogbnVtYmVyIH07XG4gICAgdHJhaW5UaW1lUmVkdWN0aW9uPzogeyBwZXJjZW50YWdlOiBudW1iZXI7IHVzZXM6IG51bWJlciB9O1xuICAgIHJlc291cmNlQm9vc3Q/OiB7XG4gICAgICAgIHJlc291cmNlOiBrZXlvZiBSZXNvdXJjZXM7XG4gICAgICAgIG11bHRpcGxpZXI6IG51bWJlcjtcbiAgICAgICAgZW5kVGltZTogbnVtYmVyO1xuICAgIH1bXTtcbiAgICBwZXJtYW5lbnRUcmFpblRpbWVSZWR1Y3Rpb24/OiBudW1iZXI7IC8vIHBlcmNlbnRhZ2Vcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDdXN0b21BZ2Uge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVsbEdhbWVTdGF0ZSB7XG4gICAgY2l2aWxpemF0aW9uOiBDaXZpbGl6YXRpb247XG4gICAgcmVzb3VyY2VzOiBSZXNvdXJjZXM7XG4gICAgdW5pdHM6IFVuaXRzO1xuICAgIGJ1aWxkaW5nczogQnVpbGRpbmdzO1xuICAgIGN1cnJlbnRBZ2U6IHN0cmluZztcbiAgICBnYW1lTG9nOiBHYW1lTG9nRW50cnlbXTtcbiAgICBhY3RpdmVUYXNrczogR2FtZVRhc2tbXTtcbiAgICByZXNvdXJjZU5vZGVzOiBSZXNvdXJjZU5vZGVbXTtcbiAgICBpbnZlbnRvcnk6IEdhbWVJdGVtW107XG4gICAgYWN0aXZlQnVmZnM6IEFjdGl2ZUJ1ZmZzO1xufVxuIl0sIm5hbWVzIjpbIkdhbWVTdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./types.ts\n"));

/***/ })

});